import Long from"long";import{App,us_listen_socket_close}from"uWebSockets.js";import pb$1 from"protobufjs/light";import{WebSocket}from"ws";import pb from"protobufjs";import{addExitCallback}from"catch-exit";import{BSON,MongoClient}from"mongodb";import{readFileSync,writeFileSync}from"fs";import{addExtension,Encoder,decode,encode,isNativeAccelerationEnabled}from"cbor-x";import{format,createLogger}from"winston";import DailyRotateFile from"winston-daily-rotate-file";import mri from"mri";import{fork}from"child_process";const DEVELOP=!0;class JsHelper{static getMethodName(){let e=(new Error).stack.split("at ")[2],t=e.indexOf(" ");return e.substring(0,t)}static getRootDirName(e){return e.split("/")[0]}static sleep(e){return new Promise((t=>setTimeout(t,e)))}static isNullOrEmpty(e){return null==e||(0==e.length||void 0)}static getStringHashCode(e){let t=5381,r=e.length;for(;r;)t=33*t^e.charCodeAt(--r);return t>>>0}static modeString(e,t){return this.getStringHashCode(e)%t}static formatStr(e,...t){let r;if("string"!=typeof e){let e=new Error("formatStr args[0] is not string");return e.name+e.stack}return 0==t.length?e:(r=e.replace(/\{\{|\}\}|\{(\d+)\}/g,(function(e,r){return"{{"==e?"{":"}}"==e?"}":t[r]})),r)}}class Singleton{constructor(){this._isDisposed=!1}static getInst(){let e=this,t=e._inst;if(null==t)throw new Error(`Singleton is not initialized, name is ${e.name}`);return t}get isDisposed(){return this._isDisposed}dispose(){this._onPreDestroy()}_onPreDestroy(){this._isDisposed||(this.onDestroy&&this.onDestroy(),Singleton._inst=null,this._isDisposed=!0)}}class Options extends Singleton{constructor(){super(...arguments),this.isServer=!1,this.process=1,this.zone=1,this.logLevel=1,this.develop=!0,this.console=!1,this._argsMap=new Map}_setArgs(e,t){this._argsMap.set(e,t)}getArgs(e){if(!this._argsMap.has(e))throw new Error(`Options.getArgs ${e} not exist`);return this._argsMap.get(e)}}class Logger extends Singleton{set iLog(e){this._iLog=e}log(e,...t){if(this.checkLogLevel(Logger.LOG_LEVEL)){let r=JsHelper.formatStr(e,...t);this._iLog.log(r)}}warn(e,...t){if(this.checkLogLevel(Logger.WARN_LEVEL)){let r=JsHelper.formatStr(e,...t);this._iLog.warn(r)}}error(e,...t){let r=JsHelper.formatStr(e,...t),s=new Error,n=JsHelper.formatStr("{0}, stack: {1}",r,s.stack);this._iLog.error(n)}checkLogLevel(e){return Options.getInst().logLevel<=e}coreLog(e,...t){let r=JsHelper.formatStr(e,...t);this._iLog.log(r)}coreWarn(e,...t){let r=JsHelper.formatStr(e,...t);this._iLog.warn(r)}coreError(e,...t){let r=JsHelper.formatStr(e,...t),s=new Error,n=JsHelper.formatStr("{0}, stack: {1}",r,s.stack);this._iLog.error(n)}}function log(e,...t){Logger.getInst().log(e,...t)}function warn(e,...t){Logger.getInst().warn(e,...t)}function error(e,...t){Logger.getInst().error(e,...t)}function coreLog(e,...t){let r=`[core]: ${JsHelper.formatStr(e,...t)}`;try{Logger.getInst().coreLog(r)}catch(e){console.log(r)}}function coreWarn(e,...t){let r=`[core]: ${JsHelper.formatStr(e,...t)}`;try{Logger.getInst().coreWarn(r)}catch(e){console.warn(r)}}function coreError(e,...t){let r=`[core]: ${JsHelper.formatStr(e,...t)}`;try{Logger.getInst().coreError(r)}catch(e){console.error(r)}}async function safeCall(e){try{return await e}catch(e){coreError(e?.stack)}}Logger.LOG_LEVEL=1,Logger.WARN_LEVEL=2;class AMHandler{handle(e,t){if(!e.isDisposed){let r=this.run(e,t);r instanceof Promise&&(coreWarn("{0}.run 请不要使用异步, 因为异步没办法保证消息接收后的处理顺序",this.constructor.name),safeCall(r))}}}class ObjectPool extends Singleton{constructor(){super(...arguments),this._pool=new Map}fetch(e){let t=this._pool.get(e);return t?0===t.length?new e:t.shift():new e}recycle(e){let t=e.constructor,r=this._pool.get(t);r||(r=[],this._pool.set(t,r)),r.length>1e3?console.warn(`pool ${t.name} is too large`):r.push(e)}}class Task extends Promise{static create(e){let t,r=new Task(((e,r)=>{t=e}));return r._resolve=t,r}setResult(e){this._resolve?(this._resolve(e),this.dispose()):coreError("setResult task has been disposed")}constructor(e){super(e)}dispose(){this._resolve=null}}class Game{static addSingleton(e){if(Game.singletonMap.has(e))throw new Error(`already exist singleton: ${e.name}`);let t=new e;return e._inst=t,Game.singletonMap.set(e,t),Game.singletons.push(t),t.awake&&t.awake(),Game.destroys.push(t),t.update&&Game.updates.push(t),t.lateUpdate&&Game.lateUpdates.push(t),t}static async waitFrameFinish(){let e=Task.create();Game.frameFinishTaskQueue.push(e),await e}static update(){for(let e=0;e<Game.updates.length;e++){let t=Game.updates[e];t.isDisposed||t.update()}}static lateUpdate(){for(let e=0;e<Game.lateUpdates.length;e++){let t=Game.lateUpdates[e];t.isDisposed||t.lateUpdate()}}static frameFinishUpdate(){let e=Game.frameFinishTaskQueue.length;if(0!=e){for(let t=0;t<e;t++){Game.frameFinishTaskQueue[t].setResult()}Game.frameFinishTaskQueue=[]}}static dispose(){for(let e=Game.singletons.length-1;e>=0;e--){let t=Game.singletons[e];t.isDisposed||t._onPreDestroy()}}}Game.singletonMap=new Map,Game.singletons=new Array,Game.destroys=new Array,Game.updates=new Array,Game.lateUpdates=new Array,Game.frameFinishTaskQueue=new Array;const IgnoreSerialize=(e,t,r)=>{if(r)return r.enumerable=!1,r;Object.defineProperty(e,t,{set(e){Object.defineProperty(this,t,{value:e,writable:!0,configurable:!0})},configurable:!0})};var DecoratorTypeCore;!function(e){e.Event="Event",e.Invoke="Invoke",e.Message="Message",e.MessageParser="MessageParser",e.MessageResponse="MessageResponse",e.MessageHandler="MessageHandler",e.ActorMessageHandler="ActorMessageHandler",e.ConsoleHandler="ConsoleHandler",e.Transfer="Transfer",e.DB="DB",e.AIHandler="AIHandler",e.UI="UI",e.UILoader="UILoader",e.NumericWatcher="NumericWatcher",e.FrameFinishEvent="FrameFinishEvent"}(DecoratorTypeCore||(DecoratorTypeCore={}));class DecoratorCollector{constructor(){this.decorators=new Map}static get inst(){return null==DecoratorCollector._inst&&(DecoratorCollector._inst=new DecoratorCollector),DecoratorCollector._inst}add(e,...t){let r=this.decorators.get(e);r||(r=new Array,this.decorators.set(e,r)),r.push(t)}get(e){return this.decorators.get(e)||[]}}class FlagMgr extends Singleton{constructor(){super(...arguments),this._datas=new Map}add(e){let t=DecoratorCollector.inst.get(e),r=new Set;this._datas.set(e,r);for(const e of t){let t=e[0];r.add(t)}return r}hasFlag(e,t){let r=this._datas.get(e);return r||(r=this.add(e)),r.has(t)}}class TimeInfo extends Singleton{awake(){this.serverMinusClientTime=0,this.frameTime=this.clientNow()}get ServerMinusClientTime(){return this.serverMinusClientTime}set ServerMinusClientTime(e){this.serverMinusClientTime=e}update(){this.frameTime=this.clientNow()}clientNow(){return Math.floor(Date.now())}serverNow(){return this.clientNow()+this.serverMinusClientTime}clientFrameTime(){return this.frameTime}serverFrameTime(){return this.frameTime+this.serverMinusClientTime}}class IdStruct{static generate(){0==this.lastTime&&(this.lastTime=this.timeSinceEpoch(),this.lastTime<=0&&(coreWarn(`${(new this).constructor.name}: lastTime less than 0: ${this.lastTime}`),this.lastTime=1));let e=this.timeSinceEpoch();e>this.lastTime?(this.lastTime=e,this.idCount=0):(++this.idCount,this.idCount>IdStruct.PowValueBit&&(++this.lastTime,this.idCount=0,coreError(`${(new this).constructor.name}: idCount per sec overflow: ${e} ${this.lastTime}`)));let t=new this;return t.initArgs3(this.lastTime,Options.getInst().process,this.idCount),t.ToLong()}static timeSinceEpoch(){let e=(TimeInfo.getInst().frameTime-this.epoch)/1e3;return Math.floor(e)}ToLong(){return this.result.toNumber()}initArgs1(e){return this.result=Long.fromNumber(e,!0),this.Time=this.result.and(IdStruct.PowTimeBit).toNumber(),this.Process=this.result.shiftRight(IdStruct.TimeBit).and(IdStruct.PowProcessBit).toNumber(),this.Value=this.result.shiftRight(IdStruct.TimeBit+IdStruct.ProcessBit).and(IdStruct.PowValueBit).toNumber(),this}initArgs2(e,t){this.Time=0,this.Process=e,this.Value=t,this.updateResult()}initArgs3(e,t,r){return this.Time=e,this.Process=t,this.Value=r,this.updateResult(),this}updateResult(){this.result=Long.fromInt(0,!0).or(this.Value).shiftLeft(IdStruct.ProcessBit).or(this.Process).shiftLeft(IdStruct.TimeBit).or(this.Time)}}IdStruct.epoch=new Date(2023,4,1).getTime(),IdStruct.lastTime=0,IdStruct.idCount=0,IdStruct.TimeBit=28,IdStruct.ProcessBit=8,IdStruct.ValueBit=17,IdStruct.PowTimeBit=Math.pow(2,IdStruct.TimeBit)-1,IdStruct.PowProcessBit=Math.pow(2,IdStruct.ProcessBit)-1,IdStruct.PowValueBit=Math.pow(2,IdStruct.ValueBit)-1;class InstanceIdStruct{static generate(){0==this.lastTime&&(this.lastTime=this.timeSinceEpoch(),this.lastTime<=0&&(coreWarn(`${(new this).constructor.name}: lastTime less than 0: ${this.lastTime}`),this.lastTime=1));let e=this.timeSinceEpoch();e>this.lastTime?(this.lastTime=e,this.idCount=0):(++this.idCount,this.idCount>InstanceIdStruct.PowValueBit&&(++this.lastTime,this.idCount=0,coreError(`${(new this).constructor.name}: idCount per sec overflow: ${e} ${this.lastTime}`)));let t=new this;return t.initArgs3(this.lastTime,Options.getInst().process,this.idCount),t.ToLong()}static timeSinceEpoch(){let e=(TimeInfo.getInst().frameTime-this.epoch)/1e3;return Math.floor(e)}ToLong(){return this.result.toNumber()}initArgs1(e){return this.result=Long.fromNumber(e,!0),this.Time=this.result.and(InstanceIdStruct.PowTimeBit).toNumber(),this.Process=this.result.shiftRight(InstanceIdStruct.TimeBit).and(InstanceIdStruct.PowProcessBit).toNumber(),this.Value=this.result.shiftRight(InstanceIdStruct.TimeBit+InstanceIdStruct.ProcessBit).and(InstanceIdStruct.PowValueBit).toNumber(),this}initArgs2(e,t){this.Time=0,this.Process=e,this.Value=t,this.updateResult()}initArgs3(e,t,r){return this.Time=e,this.Process=t,this.Value=r,this.updateResult(),this}updateResult(){this.result=Long.fromInt(0,!0).or(this.Value).shiftLeft(InstanceIdStruct.ProcessBit).or(this.Process).shiftLeft(InstanceIdStruct.TimeBit).or(this.Time)}}InstanceIdStruct.epoch=new Date(2023,4,2).getTime(),InstanceIdStruct.lastTime=0,InstanceIdStruct.idCount=0,InstanceIdStruct.TimeBit=28,InstanceIdStruct.ProcessBit=8,InstanceIdStruct.ValueBit=17,InstanceIdStruct.PowTimeBit=Math.pow(2,InstanceIdStruct.TimeBit)-1,InstanceIdStruct.PowProcessBit=Math.pow(2,InstanceIdStruct.ProcessBit)-1,InstanceIdStruct.PowValueBit=Math.pow(2,InstanceIdStruct.ValueBit)-1;class IdGenerator extends Singleton{awake(){}generateInstanceId(){return InstanceIdStruct.generate()}generateId(){return IdStruct.generate()}}var EntityStatus,__decorate$w=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};!function(e){e[e.None=0]="None",e[e.IsFromPool=1]="IsFromPool",e[e.IsRegister=2]="IsRegister",e[e.IsComponent=4]="IsComponent",e[e.IsCreated=8]="IsCreated",e[e.IsNew=16]="IsNew"}(EntityStatus||(EntityStatus={}));class Entity{constructor(){this.status=EntityStatus.None}get parent(){return this._parent}set parent(e){if(null==e)throw new Error(`cant set parent null: ${this.constructor.name}`);if(e==this)throw new Error(`cant set parent self: ${this.constructor.name}`);if(null==e.domain)throw new Error(`cant set parent because parent domain is null: ${this.constructor.name} ${e.constructor.name}`);if(null!=this._parent){if(this._parent==e)throw new Error(`重复设置了Parent: ${this.constructor.name} parent: ${this._parent.constructor.name}`);this._parent.removeFromChildren(this)}this._parent=e,this.isComponent=!1,this._parent.addToChildren(this),this.domain=this.parent.domain}get domain(){return this._domain}set domain(e){if(null==e)throw new Error(`domain cant set null: ${this.constructor.name}`);if(this._domain==e)return;let t=this._domain;if(this._domain=e,null==t){if(this.instanceId=IdGenerator.getInst().generateInstanceId(),this.isRegister=!0,null!=this.componentsDB)for(let e of this.componentsDB)e.isComponent=!0,this.components.set(e.constructor,e),e._parent=this;if(null!=this.childrenDB)for(let e of this.childrenDB)e.isComponent=!1,this.children.set(e.id,e),e._parent=this}if(null!=this._children)for(let[e,t]of this._children.entries())t.domain=this._domain;if(null!=this._components)for(let[e,t]of this._components.entries())t.domain=this._domain;this.isCreated||(this.isCreated=!0)}get isDisposed(){return 0==this.instanceId}get children(){return this._children??(this._children=ObjectPool.getInst().fetch(Map))}get components(){return this._components??(this._components=ObjectPool.getInst().fetch(Map))}get isFromPool(){return(this.status&EntityStatus.IsFromPool)==EntityStatus.IsFromPool}set isFromPool(e){e?this.status|=EntityStatus.IsFromPool:this.status&=~EntityStatus.IsFromPool}get isComponent(){return(this.status&EntityStatus.IsComponent)==EntityStatus.IsComponent}set isComponent(e){e?this.status|=EntityStatus.IsComponent:this.status&=~EntityStatus.IsComponent}get isCreated(){return(this.status&EntityStatus.IsCreated)==EntityStatus.IsCreated}set isCreated(e){e?this.status|=EntityStatus.IsCreated:this.status&=~EntityStatus.IsCreated}get isNew(){return(this.status&EntityStatus.IsNew)==EntityStatus.IsNew}set isNew(e){e?this.status|=EntityStatus.IsNew:this.status&=~EntityStatus.IsNew}get isRegister(){return(this.status&EntityStatus.IsRegister)==EntityStatus.IsRegister}set isRegister(e){this.isRegister!=e&&(e?this.status|=EntityStatus.IsRegister:this.status&=~EntityStatus.IsRegister,e?(Entity.IRoot.add(this),Entity.IEventSystem.registerSystem(this)):Entity.IRoot.remove(this.instanceId))}set componentParent(e){if(null==e)throw new Error(`cant set parent null: ${this.constructor.name}`);if(e==this)throw new Error(`cant set parent self: ${this.constructor.name}`);if(null==e.domain)throw new Error(`cant set parent because parent domain is null: ${this.constructor.name} ${e.constructor.name}`);if(null!=this.parent){if(this.parent==e)throw new Error(`重复设置了Parent: ${this.constructor.name} parent: ${this.parent.constructor.name}`);this.parent.removeFromComponents(this)}this._parent=e,this.isComponent=!0,this._parent.addToComponents(this),this.domain=this.parent.domain}addComponent(e,t){return e instanceof Entity?this.addComponentByEntity(e):this.addComponentByCtor(e,t)}tryAddComponent(e){let t=this.getComponent(e);return null==t&&(t=this.addComponent(e)),t}addComponentByEntity(e){let t=e.constructor;if(null!=this._components&&this._components.has(t))throw new Error(`entity already has component: ${t.name}`);return e.componentParent=this,e}addComponentByCtor(e,t=!1){if(null!=this._components&&this._components.has(e))throw new Error(`entity already has component: ${e.name}`);let r=this.create(e,t);return r.id=this.id,r.componentParent=this,r.awake&&Entity.IEventSystem.awakeComEvent(r),r}addChild(e,t){return e instanceof Entity?this.addChildByEntity(e):this.addChildByCtor(e,t)}addChildWithId(e,t,r=!1){let s=this.create(e,r);return s.id=t,s.parent=this,s.awake&&Entity.IEventSystem.awakeComEvent(s),s}addChildByEntity(e){return e.parent=this,e}addChildByCtor(e,t=!1){let r=this.create(e,t);return r.id=IdGenerator.getInst().generateId(),r.parent=this,r.awake&&Entity.IEventSystem.awakeComEvent(r),r}create(e,t){let r;return r=t?ObjectPool.getInst().fetch(e):new e,r.isFromPool=t,r.isCreated=!0,r.isNew=!0,r.id=0,r}removeFromChildren(e){null!=this._children&&(this._children.delete(e.id),0==this._children.size&&(ObjectPool.getInst().recycle(this._children),this._children=null),this.removeFromChildrenDB(e))}removeFromChildrenDB(e){FlagMgr.getInst().hasFlag(DecoratorTypeCore.DB,e.constructor)&&null!=this.childrenDB&&(this.childrenDB.delete(e),0==this.childrenDB.size&&this.isNew&&(ObjectPool.getInst().recycle(this.childrenDB),this.childrenDB=null))}removeFromComponents(e){null!=this._components&&(this._components.delete(e.constructor),0==this._components.size&&(ObjectPool.getInst().recycle(this._components),this._components=null),this.removeFromComponentsDB(e))}removeFromComponentsDB(e){FlagMgr.getInst().hasFlag(DecoratorTypeCore.DB,e.constructor)&&null!=this.componentsDB&&(this.componentsDB.delete(e),0==this.componentsDB.size&&this.isNew&&(ObjectPool.getInst().recycle(this.componentsDB),this.componentsDB=null))}addToComponents(e){this.components.set(e.constructor,e),this.AddToComponentsDB(e)}AddToComponentsDB(e){FlagMgr.getInst().hasFlag(DecoratorTypeCore.DB,e.constructor)&&(this.componentsDB??(this.componentsDB=ObjectPool.getInst().fetch(Set)),this.componentsDB.add(e))}AddToChildrenDB(e){FlagMgr.getInst().hasFlag(DecoratorTypeCore.DB,e.constructor)&&(this.childrenDB??(this.childrenDB=ObjectPool.getInst().fetch(Set)),this.childrenDB.add(e))}addToChildren(e){if(this.children.has(e.id))throw new Error(`entity already has child: ${e.id}`);this.children.set(e.id,e),this.AddToChildrenDB(e)}getComponent(e){if(null==this._components)return null;let t=this._components.get(e);return t||null}removeComponent(e){if(this.isDisposed)return;if(null==this._components)return;let t=this.getComponent(e);null!=t&&(this.removeFromComponents(t),t.dispose())}getParent(e){return this.parent}getChild(e,t){if(null==this._children)return null;return this._children.get(t)}removeChild(e){if(null==this._children)return;let t=this._children.get(e);t&&(this._children.delete(e),t.dispose())}dispose(){if(!this.isDisposed){if(this.isRegister=!1,this.instanceId=0,null!=this._children){for(let[e,t]of this._children.entries())t.dispose();this._children.clear(),ObjectPool.getInst().recycle(this._children),this._children=null,null!=this.childrenDB&&(this.childrenDB.clear(),this.isNew&&(ObjectPool.getInst().recycle(this.childrenDB),this.childrenDB=null))}if(null!=this._components){for(let[e,t]of this._components.entries())t.dispose();this._components.clear(),ObjectPool.getInst().recycle(this._components),this._components=null,null!=this.componentsDB&&(this.componentsDB.clear(),this.isNew&&(ObjectPool.getInst().recycle(this.componentsDB),this.componentsDB=null))}this.destroy&&Entity.IEventSystem.destroyComEvent(this),this._domain=null,null==this._parent||this._parent.isDisposed||(this.isComponent?this._parent.removeComponent(this.getType()):this._parent.removeFromChildren(this)),this._parent=null,this.isFromPool&&ObjectPool.getInst().recycle(this),this.status=EntityStatus.None}}domainScene(){return this.domain}getType(){return this.constructor}}__decorate$w([IgnoreSerialize],Entity.prototype,"instanceId",void 0),__decorate$w([IgnoreSerialize],Entity.prototype,"_domain",void 0),__decorate$w([IgnoreSerialize],Entity.prototype,"_children",void 0),__decorate$w([IgnoreSerialize],Entity.prototype,"_components",void 0),__decorate$w([IgnoreSerialize],Entity.prototype,"_parent",void 0),__decorate$w([IgnoreSerialize],Entity.prototype,"status",void 0);class TypeNameCore{}TypeNameCore.Scene="Scene";class TypeCollector{constructor(){this.ctors=new Map}static get inst(){return null==TypeCollector._inst&&(TypeCollector._inst=new TypeCollector),TypeCollector._inst}add(e,t){this.ctors.has(e)?console.error(`type ${e} already exists`):this.ctors.set(e,t)}get(e){let t=this.ctors.get(e);return null==t&&console.error(`type ${e} not found`),t}}function TypeCollectorDecorator(e){return function(t){TypeCollector.inst.add(e,t)}}var __decorate$v=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let Scene=class extends Entity{set domain(e){this._domain=e}get domain(){return this._domain}set parent(e){null!=e&&(this._parent=e,this._parent.children.set(this.id,this))}init(e){this.id=e.id,this.instanceId=e.instanceId,this.sceneType=e.sceneType,this.name=e.name,this.parent=e.parent,this.isCreated=!0,this.isNew=!0,this.domain=this,this.isRegister=!0,coreLog("scene create sceneType = {0}, name = {1}, id = {2}",this.sceneType,this.name,this.id)}};Scene=__decorate$v([TypeCollectorDecorator(TypeNameCore.Scene)],Scene);class EntityIRootLoader{static run(e){Entity.IRoot=e}}class EntitySceneFactory{static createScene(e){null==e.instanceId&&(e.instanceId=IdGenerator.getInst().generateInstanceId());let t=new(TypeCollector.inst.get(TypeNameCore.Scene));return t.init(e),t}}var SceneTypeCore$1,MessageTypeCore,TimerType,WaitError,InstanceQueueIndex;!function(e){e.None="None",e.Process="Process",e.Client="Client",e.Current="Current"}(SceneTypeCore$1||(SceneTypeCore$1={}));class Root extends Singleton{constructor(){super(...arguments),this.allEntities=new Map}get scene(){return this._scene}awake(){EntityIRootLoader.run(this),this._scene=EntitySceneFactory.createScene({id:0,sceneType:SceneTypeCore$1.Process,name:"Process"})}destroy(){}add(e){this.allEntities.set(e.instanceId,e)}remove(e){this.allEntities.delete(e)}get(e){return this.allEntities.get(e)}}!function(e){e.Message="Message",e.Request="Request",e.Response="Response",e.ActorMessage="ActorMessage",e.ActorRequest="ActorRequest",e.ActorResponse="ActorResponse",e.ActorLocationMessage="ActorLocationMessage",e.ActorLocationRequest="ActorLocationRequest",e.ActorLocationResponse="ActorLocationResponse"}(MessageTypeCore||(MessageTypeCore={}));class MessageTypeMgr extends Singleton{constructor(){super(...arguments),this._messageTypeMap=new Map,this._typeToMessageTypeMap=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.Message);for(const t of e){let e=t[0],r=t[1],s=t[2];this._messageTypeMap.set(s,r),this._typeToMessageTypeMap.set(e,r)}}destroy(){this._messageTypeMap.clear(),this._messageTypeMap=null}getMessageType(e){return this._typeToMessageTypeMap.get(e)}isResponse(e){let t=this._messageTypeMap.get(e);return!!t&&(t==MessageTypeCore.Response||(t==MessageTypeCore.ActorResponse||t==MessageTypeCore.ActorLocationResponse))}}class DoubleMap{constructor(){this.kv=new Map,this.vk=new Map}*iterator(){for(const[e,t]of this.kv)yield e}Add(e,t){null==e||null==t||this.kv.has(e)||this.vk.has(t)||(this.kv.set(e,t),this.vk.set(t,e))}GetValueByKey(e){return null!=e&&this.kv.has(e)?this.kv.get(e):null}GetKeyByValue(e){return null!=e&&this.vk.has(e)?this.vk.get(e):null}RemoveByKey(e){if(null==e)return;let t=this.kv.get(e);t&&(this.kv.delete(e),this.vk.delete(t))}Clear(){this.kv.clear(),this.vk.clear()}}class NetServices extends Singleton{constructor(){super(...arguments),this.acceptIdGenerator=Number.MAX_SAFE_INTEGER-1,this.typeOpcode=new DoubleMap,this.services=new Map,this.queue=new Array,this.serviceIdGenerator=0,this.acceptCallback=new Map,this.readCallback=new Map,this.errorCallback=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.Message);for(const t of e){let e=t[2];t[1];let r=t[0];this.typeOpcode.Add(r,e)}}SendMessage(e,t,r,s){let n=this.Get(e);null!=n&&n.Send(t,r,s)}AddService(e){return e.Id=++this.serviceIdGenerator,this.Add(e),e.Id}RemoveService(e){this.Remove(e)}CreateChannel(e,t,r){let s=this.Get(e);null!=s&&s.Create(t,r)}RemoveChannel(e,t,r){let s=this.Get(e);null!=s&&s.Remove(t,r)}RegisterAcceptCallback(e,t){this.acceptCallback.set(e,t)}RegisterReadCallback(e,t){this.readCallback.set(e,t)}RegisterErrorCallback(e,t){this.errorCallback.has(e)&&coreError(`重复注册servece的errorCallback, serviceId=${e}`),this.errorCallback.set(e,t)}OnAccept(e,t,r){let s=this.acceptCallback.get(e);s&&s(t,r)}OnRead(e,t,r,s){let n=this.readCallback.get(e);n&&n(t,r,s)}OnError(e,t,r){let s=this.errorCallback.get(e);s&&s(t,r)}Get(e){return this.services.get(e)}Add(e){this.services.set(e.Id,e),this.queue.push(e.Id)}Remove(e){let t=this.services.get(e);t&&t.Dispose()}GetOpcode(e){return this.typeOpcode.GetValueByKey(e)}GetType(e){return this.typeOpcode.GetKeyByValue(e)}CreateAcceptChannelId(){return--this.acceptIdGenerator}}class MsgPrinter extends Singleton{constructor(){super(...arguments),this._ignoreDebugLogMessages=new Set,this._isLog=!0,this._isPrint=!0}isNeedLogMessage(e){return!this._ignoreDebugLogMessages.has(e)}replacer(e,t){return t instanceof Map?t.size>10?`Map length: ${t.size}`:{dataType:"Map",value:Array.from(t.entries())}:t instanceof Uint8Array?`Uint8Array length: ${t.byteLength}`:t instanceof Set?t.size>10?`Set length: ${t.size}`:{dataType:"Set",value:Array.from(t.entries())}:t instanceof Array&&t.length>10?`Array length: ${t.length}`:t}log(e,t=""){if(!Options.getInst().develop)return;if(!this._isLog)return;let r=NetServices.getInst().GetOpcode(e.constructor);this.isNeedLogMessage(r)&&coreLog(`[MsgPrinter.l] ${t}${e.constructor.name}:${JSON.stringify(e,this.replacer)}`)}print(e,t=""){this._isPrint&&coreLog(`[MsgPrinter.p] ${t}${e.constructor.name}:${JSON.stringify(e,this.replacer)}`)}getMsgString(e){return`${e.constructor.name}:${JSON.stringify(e,this.replacer)}`}ignore(e){this._ignoreDebugLogMessages.add(e)}closePrint(){this._isPrint=!1}closeLog(){this._isLog=!1}}class MessageDispatcherInfo{constructor(e,t,r){this.sceneType=e,this.msgHandler=t,this.responseType=r}}class MessageDispatcherMgr extends Singleton{constructor(){super(...arguments),this._handlers=new Map}awake(){this.load()}destroy(){this._handlers.clear()}registerHandler(e,t){this._handlers.has(e)||this._handlers.set(e,new Array),this._handlers.get(e).push(t)}load(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.MessageHandler);for(const t of e){let e=t[0],r=t[1],s=t[2],n=t[3],o=new e,i=new MessageDispatcherInfo(s,o,n);this.registerHandler(r,i)}}handle(e,t){let r=t.constructor,s=this._handlers.get(r);if(!s){let e=NetServices.getInst().GetOpcode(r);return void MsgPrinter.getInst().print(t,`消息没有处理: opcode=${e}`)}let n=e.domainScene().sceneType;for(const r of s)r.sceneType==n&&r.msgHandler.handle(e,t,r.responseType)}}class RecycleObj{constructor(){this._isRecycle=!1}static create(e){let t=ObjectPool.getInst().fetch(this);return e&&Object.assign(t,e),t._isRecycle=!0,t}dispose(){this._isRecycle&&ObjectPool.getInst().recycle(this)}}class AWait extends RecycleObj{constructor(){super(...arguments),this.error=0}}class TimeHelper{static clientNow(){return TimeInfo.getInst().clientNow()}static clientNowSeconds(){return Math.floor(TimeHelper.clientNow()/1e3)}static dateTimeNow(){return new Date}static serverNow(){return TimeInfo.getInst().serverNow()}static clientFrameTime(){return TimeInfo.getInst().clientFrameTime()}static serverFrameTime(){return TimeInfo.getInst().serverFrameTime()}}TimeHelper.OneDay=864e5,TimeHelper.Hour=36e5,TimeHelper.Minute=6e4,function(e){e[e.Once=0]="Once",e[e.Repeat=1]="Repeat",e[e.Task=2]="Task"}(TimerType||(TimerType={}));class Timer{static GetId(){return++this._idGenerator}static create(){let e=ObjectPool.getInst().fetch(Timer);return e.reset(),e.id=Timer.GetId(),e}reset(){this.cb=null,this.tcs=null,this.id=0,this.expireTime=0,this.interval=0}dispose(){this.reset(),ObjectPool.getInst().recycle(this)}}Timer._idGenerator=1e3;class TimerMgr extends Singleton{constructor(){super(...arguments),this._timerMap=new Map,this._timers=[]}newRepeatedTimer(e,t){let r=Timer.create();return r.type=TimerType.Repeat,r.cb=t,r.interval=e,r.expireTime=e+TimeHelper.clientNow(),this._timerMap.set(r.id,r),this._timers.push(r),r.id}newOnceTimer(e,t){let r=Timer.create();return r.type=TimerType.Once,r.cb=t,r.expireTime=e+TimeHelper.clientNow(),this._timerMap.set(r.id,r),this._timers.push(r),r.id}newFrameTimer(e){let t=Timer.create();return t.type=TimerType.Repeat,t.cb=e,Options.getInst().isServer?t.interval=100:t.interval=1,t.expireTime=t.interval+TimeHelper.clientNow(),this._timerMap.set(t.id,t),this._timers.push(t),t.id}remove(e){let t=this._timerMap.get(e);return!!t&&(t.id=0,this._timerMap.delete(e),!0)}update(){let e=TimeHelper.clientNow();for(let t=this._timers.length-1;t>=0;t--){let r=this._timers[t];0!=r.id?r.expireTime>e||(null!=r.cb&&r.cb(),null!=r.tcs&&r.tcs.setResult(),r.type==TimerType.Repeat?r.expireTime+=r.interval:this.remove(r.id)):(this._timers.splice(t,1),r.dispose())}}async waitAsync(e,t){if(0==e)return;let r,s=Task.create(),n=Timer.create();n.type=TimerType.Once,n.tcs=s,n.expireTime=e+TimeHelper.clientNow(),this._timerMap.set(n.id,n),this._timers.push(n),t&&(r=()=>{this.remove(n.id)&&s.setResult()},t.add(r));try{await s}finally{t?.remove(r),r=null}}}!function(e){e[e.Success=0]="Success",e[e.Destroy=1]="Destroy",e[e.Cancel=2]="Cancel",e[e.Timeout=3]="Timeout"}(WaitError||(WaitError={}));class ObjectWait extends Entity{constructor(){super(...arguments),this.tcss=new Map}async wait(e,t){this.cancelLastWait(e);let r,s,n=Task.create(e);this.tcss.set(e,n),t&&(r=()=>{let t=new e;t.error=WaitError.Cancel,this.notify(t)},t.add(r));try{s=await n}finally{t?.remove(r),r=null}return s}async waitWithTimeout(e,t,r){this.cancelLastWait(e);let s,n,o=Task.create(e);this.tcss.set(e,o),this.timeoutRun(e,t,r),r&&(s=()=>{let t=new e;t.error=WaitError.Cancel,this.notify(t)},r.add(s));try{n=await o}finally{r?.remove(s),s=null}return n}cancelLastWait(e){if(!this.tcss.has(e))return;coreWarn("上一个wait已经取消",e.name);let t=e.create();t.error=WaitError.Cancel,this.notify(t)}async timeoutRun(e,t,r){if(await TimerMgr.getInst().waitAsync(t,r),r?.isCancel())return;if(!this.tcss.has(e))return;let s=e.create();s.error=WaitError.Timeout,this.notify(s)}notify(e){let t=this.tcss.get(e.constructor);t&&(this.tcss.delete(e.constructor),t.setResult(e),e.dispose())}}class CoroutineLockItem{init(e){this.key=e,this.task=Task.create(),this._timerId2=TimerMgr.getInst().newOnceTimer(6e4,this.timeout.bind(this)),this._timeoutInfo="60秒没有解锁 出大问题了"}setTimeoutInfo(e,t){this._timerId1?coreError("CoroutineLockItem repeat setTimeoutInfo"):(this._timerId1=TimerMgr.getInst().newOnceTimer(e,this.timeout.bind(this)),this._timeoutInfo=t)}async timeout(){coreWarn(`CoroutineLockItem timeout key: ${this.key}`),coreWarn(`CoroutineLockItem timeout info: ${this._timeoutInfo}`)}dispose(){this._timerId1&&(TimerMgr.getInst().remove(this._timerId1),this._timerId1=null),TimerMgr.getInst().remove(this._timerId2),this._timerId2=null,this._timeoutInfo=null,null!=this.key?(CoroutineLock.getInst().runNextLock(this),this.key=null,this.task=null):coreError("CoroutineLockItem repeat dispose")}}class CoroutineLock extends Singleton{constructor(){super(...arguments),this.lockMap=new Map}async wait(e,t){let r=`${e}_${t}`,s=this.lockMap.get(r);s||(s=new Set,this.lockMap.set(r,s));let n=ObjectPool.getInst().fetch(CoroutineLockItem);return n.init(r),s.add(n),s.size>1?await n.task:n.task.setResult(),n}runNextLock(e){let t=this.lockMap.get(e.key);t.delete(e),ObjectPool.getInst().recycle(e);for(const e of Array.from(t.values())){e.task.setResult();break}}}class ErrorCore{static IsRpcNeedThrowException(e){return null!=e&&(0!=e&&!(e>=ErrorCore.ERR_Exception))}}ErrorCore.ERR_Success=0,ErrorCore.ERR_SendMessageNotFoundWChannel=2,ErrorCore.ERR_RpcFail=3,ErrorCore.ERR_SessionSendOrRecvTimeout=5,ErrorCore.ERR_NotFoundActor=6,ErrorCore.ERR_ActorTimeout=7,ErrorCore.ERR_SessionDisposed=8,ErrorCore.ERR_ActorIdIsZero=9,ErrorCore.ERR_ActorLocationSenderDispose=10,ErrorCore.ERR_ActorLocationError=11,ErrorCore.ERR_SessionNotExist=12,ErrorCore.ERR_DBErr=13,ErrorCore.ERR_Exception=1e3,ErrorCore.Login_PasswordError=1101,ErrorCore.ERR_ConnectGateKeyError=1102,ErrorCore.Login_RepeatRequestGate=1103,ErrorCore.Login_ConnectRealmFailed=1104,ErrorCore.Login_ConnectGateFailed=1105,ErrorCore.Login_AccountNotExist=1106,ErrorCore.Login_UnitNotExist=1107;class ActorResponse{constructor(e){this.error=e}}class RpcInfo{constructor(e){this.Request=e,this.Tcs=Task.create()}setResult(e){this.Tcs.setResult(e),this.Tcs=null}}class Session extends Entity{constructor(){super(...arguments),this.requestCallbacks=new Map,this.Error=0}init(e){this.ServiceId=e;let t=TimeHelper.clientNow();this.LastRecvTime=t,this.LastSendTime=t}OnResponse(e){let t=this.requestCallbacks.get(e.rpcId);if(null==t)throw new Error(`Session OnResponse 没有找到对应的action=${e.rpcId}`);if(this.requestCallbacks.delete(e.rpcId),ErrorCore.IsRpcNeedThrowException(e.error))throw t.setResult(e),new Error(`Session OnResponse error, req=${t.Request.constructor.name}, ${e.error}`);t.setResult(e)}Send(e){this.isDisposed?coreLog("session已经销毁,不能发送消息, message={0}, sessionId={1}",e.constructor.name,this.id):this.SendWithId(0,e)}SendWithId(e,t){this.isDisposed?coreLog("session已经销毁,不能发送消息, message={0}, sessionId={1}",t.constructor.name,this.id):(this.LastSendTime=TimeHelper.clientNow(),NetServices.getInst().SendMessage(this.ServiceId,this.id,e,t))}async Call(e){if(this.isDisposed){return coreLog("session已经销毁,不能发送消息, message={0}, sessionId={1}",e.constructor.name,this.id),new ActorResponse(ErrorCore.ERR_SessionDisposed)}let t=++Session.RpcId,r=new RpcInfo(e);return this.requestCallbacks.set(t,r),e.rpcId=t,this.Send(e),await r.Tcs}destroy(){this.Error>0&&NetServices.getInst().OnError(this.ServiceId,this.id,this.Error),NetServices.getInst().RemoveChannel(this.ServiceId,this.id,this.Error);let e=new ActorResponse(ErrorCore.ERR_SessionDisposed);for(let[t,r]of this.requestCallbacks)r.setResult(e);Options.getInst().isServer||coreLog(`session destroy id=${this.id}`)}}function DB(e){DecoratorCollector.inst.add(DecoratorTypeCore.DB,e)}Session.RpcId=0;class AEvent extends RecycleObj{}class EntryEvent extends AEvent{}class NumericChange extends AEvent{}class NetErrorEvent extends AEvent{}!function(e){e[e.None=-1]="None",e[e.Update=0]="Update",e[e.LateUpdate=1]="LateUpdate",e[e.Max=2]="Max"}(InstanceQueueIndex||(InstanceQueueIndex={}));class EntityIEventSystemLoader{static run(e){Entity.IEventSystem=e}}class EventInfo{constructor(e,t){this.eventHandler=e,this.sceneType=t}}class EventSystem extends Singleton{constructor(){super(...arguments),this.allEvents=new Map,this.queues=new Array(InstanceQueueIndex.Max)}awake(){EntityIEventSystemLoader.run(this);for(let e=0;e<this.queues.length;e++)this.queues[e]=new Array;this.initEvent()}initEvent(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.Event);for(const t of e){let e=t[0],r=t[1],s=t[2],n=this.allEvents.get(e);n||(n=new Array,this.allEvents.set(e,n)),n.push(new EventInfo(new r,s))}}registerSystem(e){e.update&&this.queues[InstanceQueueIndex.Update].push(e.instanceId),e.lateUpdate&&this.queues[InstanceQueueIndex.LateUpdate].push(e.instanceId)}async publishAsync(e,t){e||coreError("发送事件必须传scene");let r=this.allEvents.get(t.constructor);if(!r)return;let s=[];for(let n=0;n<r.length;n++){let o=r[n];o.sceneType!=e.sceneType&&o.sceneType!=SceneTypeCore$1.None||s.push(o.eventHandler.handleAsync(e,t))}await Promise.all(s),t.dispose()}publish(e,t){e||coreError("发送事件必须传scene");let r=this.allEvents.get(t.constructor);if(r){for(let s=0;s<r.length;s++){let n=r[s];n.sceneType!=e.sceneType&&n.sceneType!=SceneTypeCore$1.None||n.eventHandler.handle(e,t)}t.dispose()}}awakeComEvent(e){e.awake()}destroyComEvent(e){e.destroy()}update(){let e=this.queues[InstanceQueueIndex.Update];for(let t=e.length-1;t>=0;t--){let r=e[t],s=Root.getInst().get(r);s?s.isDisposed?e.splice(t,1):s.update():e.splice(t,1)}}lateUpdate(){let e=this.queues[InstanceQueueIndex.LateUpdate];for(let t=e.length-1;t>=0;t--){let r=e[t],s=Root.getInst().get(r);s?s.isDisposed?e.splice(t,1):s.lateUpdate():e.splice(t,1)}}}var __decorate$u=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let NumericComponent=class extends Entity{constructor(){super(...arguments),this.NumericDic=new Map}add(e,t){let r=this.get(e);this.set(e,r+t)}addNoEvent(e,t){let r=this.get(e);this.set(e,r+t,!1)}sub(e,t){let r=this.get(e);this.set(e,r-t)}subNoEvent(e,t){let r=this.get(e);this.set(e,r-t,!1)}set(e,t,r=!0){let s=this.get(e);s!=t&&(this.NumericDic.set(e,t),r&&EventSystem.getInst().publish(this.domainScene(),NumericChange.create({entity:this.parent,new:t,old:s,numericType:e})))}setNoEvent(e,t){this.set(e,t,!1)}get(e){return this.NumericDic.get(e)||0}updateKey(e,t=!0){if(e<1e3)return;let r=Math.floor(e/10),s=10*r+1,n=10*r+2,o=10*r+3,i=10*r+4,a=10*r+5,c=((this.get(s)+this.get(n))*(100+this.get(o))/100+this.get(i))*(100+this.get(a))/100;c=Math.floor(c),this.set(r,c,t)}resetBase(e){let t=Math.floor(e/10),r=10*t+1,s=10*t+2,n=10*t+3,o=10*t+4,i=10*t+5;this.NumericDic.delete(r),this.NumericDic.delete(s),this.NumericDic.delete(n),this.NumericDic.delete(o),this.NumericDic.delete(i)}};function NumericWatcherHandlerDecorator(e,t){return function(r){DecoratorCollector.inst.add(DecoratorTypeCore.NumericWatcher,r,e,t)}}NumericComponent=__decorate$u([DB],NumericComponent);class RandomGenerator{static RandomInt(e,t){return Math.floor(Math.random()*(t-e+1)+e)}static isTrigger10000Prob(e){return this.RandomInt(0,1e4)<=e}static isTrigger100Prob(e){return this.RandomInt(0,100)<=e}}class MessageParserMgr extends Singleton{constructor(){super(...arguments),this.parsers=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.MessageParser);for(let t of e){let e=t[0],r=t[1];this.parsers.set(r,e)}}getParser(e){let t=this.parsers.get(e);return null==t&&coreError(`找不到opcode:${e}对应的解析器`),t}}function MessageParserDecorator(e){return function(t){DecoratorCollector.inst.add(DecoratorTypeCore.MessageParser,t,e)}}function MessageDecorator(e,t){return function(r){DecoratorCollector.inst.add(DecoratorTypeCore.Message,r,t,e)}}function ResponseTypeDecorator(e){return function(t){DecoratorCollector.inst.add(DecoratorTypeCore.MessageResponse,t,e)}}class CancellationToken{constructor(){this._actions=new Set}add(e){null!=e?this._actions.add(e):coreError("CancellationToken add error, callback is null")}remove(e){this._actions.delete(e)}cancel(){null!=this._actions?this.invoke():coreError("CancellationToken cancel error, repeat cancel")}isCancel(){return null==this._actions}invoke(){let e=this._actions;this._actions=null;try{for(let t of e)t();e.clear()}catch(e){coreError(e)}}}class MultiMap{constructor(){this.Empty=[],this.map=new Map}add(e,t){let r=this.map.get(e);void 0===r&&(r=[],this.map.set(e,r)),r.push(t)}remove(e,t){const r=this.map.get(e);if(void 0===r)return!1;const s=r.indexOf(t);return-1!==s&&(r.splice(s,1),0===r.length&&this.map.delete(e),!0)}getAll(e){const t=this.map.get(e);return void 0===t?[]:t}get(e){return this.map.get(e)??this.Empty}getOne(e){const t=this.map.get(e);if(void 0!==t&&t.length>0)return t[0]}contains(e,t){const r=this.map.get(e);return void 0!==r&&r.includes(t)}}class IPEndPoint{constructor(e,t=0){if(0==t){let t=e.split(":");this.host=t[0],this.port=parseInt(t[1])}else this.host=e,this.port=t}toString(){return`${this.host}:${this.port}`}}class AEventHandler{async handleAsync(e,t){try{await this.run(e,t)}catch(e){e instanceof Error?coreError(e.stack):coreError(e)}}handle(e,t){try{let r=this.run(e,t);r instanceof Promise&&(coreWarn("{0}的run方法是异步的, 请尽量不要用publish来通知",this.constructor.name),safeCall(r))}catch(e){e instanceof Error?coreError(e.stack):coreError(e)}}}function EventHandlerDecorator(e,t){return function(r){null==t&&console.error("EventDecorator必须要传 sceneType"),DecoratorCollector.inst.add(DecoratorTypeCore.Event,e,r,t)}}class AInvoke{static create(e){let t=ObjectPool.getInst().fetch(this);return e&&Object.assign(t,e),t}dispose(){ObjectPool.getInst().recycle(this)}}class FrameFinishActionMgr extends Singleton{constructor(){super(...arguments),this._actionMap=new Map}getAction(e){let t=this._actionMap.get(e);return t||(t=ObjectPool.getInst().fetch(e),t.awake(),this._actionMap.set(e,t)),t}lateUpdate(){if(0==this._actionMap.size)return;let e=ObjectPool.getInst();for(let t of this._actionMap.values())t.run(),t.destroy(),e.recycle(t);this._actionMap.clear()}}class EventItem{}class EventAutoReleaseCom extends Entity{constructor(){super(...arguments),this.events=[]}addItem(e){this.events.push(e)}destroy(){let e=this.eventCom.eventMap;for(let t of this.events){e.get(t.eventCode).delete(t),t.entity=null,t.handler=null,t.eventCode=null,ObjectPool.getInst().recycle(t)}this.events=[]}}class EventComponent extends Entity{constructor(){super(...arguments),this.eventMap=new Map}subscribe(e,t,r){let s=ObjectPool.getInst().fetch(EventItem);s.entity=r,s.handler=t,s.eventCode=e;let n=this.eventMap.get(e);n||(n=new Set,this.eventMap.set(e,n)),n.add(s);let o=r.getComponent(EventAutoReleaseCom);o||(o=r.addComponent(EventAutoReleaseCom),o.eventCom=this),o.addItem(s)}publish(e,...t){let r=this.eventMap.get(e);if(r)for(let e of r)e.handler.apply(e.entity,t)}}function DBWithKey(e,t,r){return function(s){DecoratorCollector.inst.add(DecoratorTypeCore.DB,s,e,t,r)}}function Transfer(e){DecoratorCollector.inst.add(DecoratorTypeCore.Transfer,e)}class TaskQueue extends RecycleObj{constructor(){super(...arguments),this._queue=[],this._running=!1,this._expireTime=0}get expireTime(){return this._expireTime}get isRunning(){return this._running}add(e){this._queue.push(e),1===this._queue.length&&this.run()}clear(){this._queue=[]}async run(){if(this._running)coreError("为什么会出现复入的情况呢, 好奇怪");else{for(this._running=!0;this._queue.length>0;){let e=this._queue[0];try{await e()}catch(e){coreError("TaskQueue.run error, id={0}, {1}",this.id,e.stack)}this._queue.shift()}this._running=!1,this._expireTime=TimeHelper.clientNow()+1e4}}}class TaskQueueMgr extends Singleton{constructor(){super(...arguments),this._taskQueueMap=new Map}awake(){TimerMgr.getInst().newRepeatedTimer(1e4,this.checkExpire.bind(this))}get(e){let t=this._taskQueueMap.get(e);return t||(t=TaskQueue.create(),t.id=e,coreLog("taskQueue {0} has been created",e),this._taskQueueMap.set(e,t)),t}checkExpire(){let e=TimeHelper.clientNow(),t=[];for(let[r,s]of this._taskQueueMap)s.isRunning||s.expireTime<e&&(t.push(r),s.dispose(),coreLog("taskQueue {0} has been disposed",r));for(let e of t)this._taskQueueMap.delete(e)}}class InvokeMgr extends Singleton{constructor(){super(...arguments),this._invokes=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.Invoke);for(const t of e){let e=t[0],r=t[1],s=new e;this._invokes.has(r)&&console.error(`1个invoketype只能有一个回调, invoketype=${r}`),this._invokes.set(r,s)}}invoke(e,t){return this.getHandler(e).handle(t)}async invokeAsync(e,t){let r=this.getHandler(e);return await r.handle(t)}getHandler(e){let t=this._invokes.get(e);return null==t&&coreError(`未找到对应的invoke: ${e}`),t}}class AInvokeHandler{}function InvokeDecorator(e){return function(t){DecoratorCollector.inst.add(DecoratorTypeCore.Invoke,t,e)}}class Injector{constructor(){this._map=new Map}static get inst(){return this._inst||(this._inst=new Injector),this._inst}addField(e,t,r){let s=this._map.get(e);s||(s=[],this._map.set(e,s)),s.push({target:t,key:r})}staticField(e,t){let r=this._map.get(e);r||console.error(`StaticFieldDecorator: ${e} not found`);for(const e of r)e.target[e.key]=t}}function InjectorDecorator(e){return function(t,r){Injector.inst.addField(e,t,r)}}class MachineMgr extends Singleton{constructor(){super(...arguments),this._machineMap=new Map}init(e){this._machines=e}isInit(){return null!=this._machines&&this._machines.length>0}start(){for(let e=0;e<this._machines.length;e++){let t=this._machines[e];this._machineMap.set(t.id,t)}}getMachineCfg(e){return this._machineMap.get(e)}}class InstanceIdHelper{static getSceneInstanceId(e,t){let r=ObjectPool.getInst(),s=r.fetch(InstanceIdStruct);s.initArgs2(e,t);let n=s.ToLong();return r.recycle(s),n}static getProcessId(e){let t=ObjectPool.getInst(),r=t.fetch(InstanceIdStruct);r.initArgs1(e);let s=r.Process;return t.recycle(r),s}}class ProcessMgr extends Singleton{constructor(){super(...arguments),this._processInfoMap=new Map,this._actorIdMachineMap=new Map,this._processIdMachineMap=new Map}init(e){this._processes=e}isInit(){return null!=this._processes&&this._processes.length>0}start(){for(let e=0;e<this._processes.length;e++){let t=this._processes[e],r=MachineMgr.getInst().getMachineCfg(t.machineId),s={id:t.id,machineId:t.machineId,innerPort:t.innerPort,innerIp:r.innerIp,outerIp:r.outerIp,innerAddress:new IPEndPoint(r.innerIp,t.innerPort),outerAddress:new IPEndPoint(r.outerIp,t.innerPort)};this._processInfoMap.set(s.id,s)}let e=this.getCurProcessInfo();this._curMachineId=e.machineId}getProcessInfo(e){return this._processInfoMap.get(e)}getCurProcessInfo(){return this.getProcessInfo(Options.getInst().process)}getThisMachineProcessInfos(){let e=[],t=this.getCurProcessInfo();for(let r of this._processInfoMap.values())r.machineId==t.machineId&&e.push(r);return e}actorIdIsInMachine(e){let t=this._actorIdMachineMap.get(e);if(null==t){let r=InstanceIdHelper.getProcessId(e);t=this.getProcessInfo(r).machineId,this._actorIdMachineMap.set(e,t),this._actorIdMachineMap.size>1e4&&coreWarn(`_actorIdMachineMap.size > 10000: ${this._actorIdMachineMap.size}, 求优化`)}return t==this._curMachineId}processIdIsInMachine(e){let t=this._processIdMachineMap.get(e);if(null==t){t=this.getProcessInfo(e).machineId,this._processIdMachineMap.set(e,t)}return t==this._curMachineId}}var AppType,MailboxType,ServiceType;!function(e){e[e.Server=0]="Server",e[e.Watcher=1]="Watcher",e[e.AllInOne=2]="AllInOne"}(AppType||(AppType={}));class SceneMgr extends Singleton{constructor(){super(...arguments),this._allSceneInfo=[],this._sceneInfoMap=new Map,this._processSceneMap=new MultiMap,this._sceneTypeMap=new MultiMap,this._sceneNameMap=new Map}init(e){this._scenes=e}isInit(){return null!=this._scenes&&this._scenes.length>0}start(){let e=ProcessMgr.getInst().getCurProcessInfo();for(let t=0;t<this._scenes.length;t++){let r=this._scenes[t],s=r.processId;Options.getInst().appType==AppType.AllInOne&&(s=e.id);let n=InstanceIdHelper.getSceneInstanceId(s,r.id),o=ProcessMgr.getInst().getProcessInfo(s),i={id:r.id,name:r.name,sceneType:r.sceneType,processId:s,outerPort:r.outerPort,dbAddress:r.dbAddress,dbName:r.dbName,instanceId:n,machineId:o.machineId,innerIp:o.innerIp,outerIp:o.outerIp,dbCacheInterval:r.dbCacheInterval};r.outerPort&&(i.outerAddress=new IPEndPoint(o.outerIp,r.outerPort)),this._sceneInfoMap.set(i.id,i),this._processSceneMap.add(i.processId,i),this._sceneTypeMap.add(i.sceneType,i),this._sceneNameMap.set(i.name,i),this._allSceneInfo.push(i)}}getSceneCfgs(){return this._scenes}curProcessScenes(){let e=Options.getInst().process;return this._processSceneMap.get(e)}getFirstSceneByType(e){return this.getSceneByType(e)[0]}getSceneByType(e){return this._sceneTypeMap.get(e)}getSceneById(e){return this._sceneInfoMap.get(e)}getSceneByName(e){return this._sceneNameMap.get(e)}}class AfterCreateUnit extends AEvent{}class AfterCreateGatePlayer extends AEvent{}class AfterUnitTransfer extends AEvent{}class SceneCreateEvent extends AEvent{}class AfterConnectUnit extends AEvent{}class AfterDisconnectUnit extends AEvent{}!function(e){e[e.MessageDispatcher=0]="MessageDispatcher",e[e.UnOrderMessageDispatcher=1]="UnOrderMessageDispatcher",e[e.GateSession=2]="GateSession"}(MailboxType||(MailboxType={}));class MailBoxQueueItem extends RecycleObj{}class MailBoxComponent extends Entity{constructor(){super(...arguments),this.reqQueue=[],this.isHandling=!1}awake(){this.MailboxType=MailboxType.MessageDispatcher}init(e){this.MailboxType=e}addReq(e,t){let r=MailBoxQueueItem.create({fromProcess:t,req:e});this.reqQueue.push(r)}getReq(){return this.reqQueue.shift()}destroy(){this.clearItem(),this.isHandling=!1}clearItem(){if(0!=this.reqQueue.length){for(let e of this.reqQueue)e.dispose();this.reqQueue=[]}}}!function(e){e[e.Outer=0]="Outer",e[e.Inner=1]="Inner"}(ServiceType||(ServiceType={}));class AService{}class AChannel{get IsDisposed(){return 0==this.Id}}const r$1=new pb.Reader(new Uint8Array);class MessageHelper{static getActorId(e){r$1.pos=0,r$1.buf=e,r$1.len=e.length,r$1.skip(),r$1.skip();if(r$1.uint32()>>>3==2){return r$1.uint64().toNumber()}return 0}static getOpcode(e){r$1.pos=0,r$1.buf=e,r$1.len=e.length;return r$1.uint32()>>>3==1?r$1.uint32():0}}var SocketCloseCode;!function(e){e[e.OtherLogin=4001]="OtherLogin",e[e.WChannelReadError=4002]="WChannelReadError",e[e.WebSocketError=4003]="WebSocketError",e[e.ServerMaxLimit=4004]="ServerMaxLimit"}(SocketCloseCode||(SocketCloseCode={}));const r=new pb$1.Reader(new Uint8Array),w=new pb$1.Writer;class WChannel extends AChannel{constructor(){super(),this.isConnected=!1,this.msgQueue=[]}initBySocket(e,t,r){this.uSocket=e,this.Id=t,this.Service=r,this.isConnected=!0;let s=e.getRemoteAddressAsText(),n=new TextDecoder("utf-8").decode(s);this.remoteAddress=new IPEndPoint(n,1111)}initByAddress(e,t,r){this.wSocket=new WebSocket(`ws://${e}`),this.Id=t,this.Service=r,this.remoteAddress=e,this.wSocket.on("message",this.onMessage.bind(this)),this.wSocket.on("open",this.onConnectComplete.bind(this)),this.wSocket.on("close",this.onSocketClose.bind(this)),this.wSocket.on("error",this.onWsSocketError.bind(this))}connectTimeout(){coreLog(`连接超时, address=${this.remoteAddress.toString()}`)}addTimeoutTimer(){null==this._timerId&&(this._timerId=TimerMgr.getInst().newOnceTimer(3e3,this.connectTimeout.bind(this)),coreLog("wchannel添加定时器"))}removeTimer(e){null!=this._timerId&&(TimerMgr.getInst().remove(this._timerId),this._timerId=null,coreLog(`wchannel移除定时器,${e}, address=${this.remoteAddress.toString()}`))}onConnectComplete(){this.removeTimer("连接成功"),this.isConnected=!0;for(const e of this.msgQueue)this.innerSend(e);this.msgQueue=[]}onMessage(e,t){try{if(!t)return coreError("WChannel onMessage: data is not binary"),void this.closeSocket(SocketCloseCode.WChannelReadError);let s=this.Id,n=0,o=MessageHelper.getOpcode(e),i=NetServices.getInst().GetType(o),a=MessageParserMgr.getInst().getParser(o);if(null==i)return void coreError(`opcode=${o}找不到对应的构造函数`);let c=new i;switch(r.pos=0,r.buf=e,r.len=e.length,a.decode(r,c),this.Service.ServiceType){case ServiceType.Outer:break;case ServiceType.Inner:n=MessageHelper.getActorId(e)}MsgPrinter.getInst().log(c,"on message:"),NetServices.getInst().OnRead(this.Service.Id,s,n,c)}catch(e){coreError("WChannel onMessage, remoteAddress={1} error={0}",e.stack,this.remoteAddress.toString()),this.OnError(SocketCloseCode.WChannelReadError)}}Dispose(){this.IsDisposed||(coreLog(`wchannel dispose, address=${this.remoteAddress.toString()}`),this.removeTimer("wchannel dispose"),this.Id=0,this.uSocket=null,this.wSocket=null,this.msgQueue=null,this.Service=null,this.isConnected=!1,this.remoteAddress=null)}onWsSocketError(e){coreLog(`onWsSocketError error, ${e.message}`),this.onSocketClose(SocketCloseCode.WebSocketError)}onSocketClose(e){this.Service&&this.Service.channelClose(this,e)}closeSocket(e){e<4e3?(null!=this.uSocket&&this.uSocket.end(),null!=this.wSocket&&this.wSocket.close()):(null!=this.uSocket&&this.uSocket.end(e),null!=this.wSocket&&this.wSocket.close(e))}OnError(e){this.Service.Remove(this.Id,e)}innerSend(e){null!=this.uSocket?this.uSocket.send(e,!0):this.wSocket.send(e)}Send(e,t){if(this.IsDisposed)throw new Error("WChannel已经被Dispose, 不能发送消息");MsgPrinter.getInst().log(t,"send message:");let r=NetServices.getInst().GetOpcode(t.constructor),s=MessageParserMgr.getInst().getParser(r);switch(w.reset(),w.uint32(8).uint32(r),this.Service.ServiceType){case ServiceType.Inner:w.uint32(16).uint64(e);case ServiceType.Outer:}s.encode(w,t);let n=w.finish();n.byteLength>1e4&&coreWarn(`发送消息长度超过10000字节, 可能是有问题的消息, opcode=${r}, name=${t.constructor.name}, length=${n.byteLength}`),this.isConnected?this.innerSend(n):this.msgQueue.push(n)}}class WService extends AService{constructor(){super(...arguments),this._idChannels=new Map,this._wsChannels=new Map}initSender(e){this.ServiceType=e}initAcceptor(e,t){this.address=e,this.ServiceType=t,this.restartAcceptor(),addExitCallback((e=>{coreLog(`WService exit signal=${e}`),this.closeAcceptor()}))}restartAcceptor(){this.acceptor=App(),this.acceptor.ws("/*",{open:this.onConnection.bind(this),drain:this.onDrain.bind(this),close:this.onClose.bind(this),message:this.onMessage.bind(this),maxPayloadLength:16384}),this.acceptor.listen(this.address.host,this.address.port,(e=>{e?coreLog(`WService listen ${this.address.host}:${this.address.port}`):coreError(`WService listen failed ${this.address.host}:${this.address.port}`)}))}closeAcceptor(){if(null!=this.acceptor){coreLog("WService closeAcceptor, address = {0}",this.address.toString()),this.acceptor=null,us_listen_socket_close(this.acceptor);for(let[e,t]of this._idChannels)this.Remove(e)}}Send(e,t,r){try{let s=this._idChannels.get(e);if(null==s)return void NetServices.getInst().OnError(this.Id,e,ErrorCore.ERR_SendMessageNotFoundWChannel);s.Send(t,r)}catch(e){coreError(e.stack)}}innerCreate(e,t){let r=new WChannel;r.initByAddress(t,e,this),this._idChannels.set(r.Id,r)}Create(e,t){this._idChannels.has(e)||this.innerCreate(e,t)}Dispose(){}Remove(e,t=0){let r=this._idChannels.get(e);r&&(r.closeSocket(t),this._wsChannels.delete(r.uSocket),this._idChannels.delete(e),r.Dispose())}channelClose(e,t){this._idChannels.delete(e.Id),null!=e.uSocket&&this._wsChannels.delete(e.uSocket),NetServices.getInst().OnError(this.Id,e.Id,t),e.Dispose()}onMessage(e,t,r){let s=this._wsChannels.get(e);if(null!=s)return r?void s.onMessage(new Uint8Array(t),r):(this.Remove(s.Id,SocketCloseCode.WChannelReadError),void coreError("onMessage: isBinary == false"));coreLog("onMessage: channel == null")}onConnection(e){if(this._wsChannels.size>3e3)return coreWarn("WService: 连接数过多"),void e.end(SocketCloseCode.ServerMaxLimit);let t=NetServices.getInst().CreateAcceptChannelId(),r=new WChannel;this._wsChannels.set(e,r),this._idChannels.set(t,r),r.initBySocket(e,t,this),NetServices.getInst().OnAccept(this.Id,t,r.remoteAddress)}onClose(e,t){let r=this._wsChannels.get(e);null!=r?r.onSocketClose(t):coreLog("onClose: channel == null")}onDrain(e){coreLog("onDrain: 压力过大")}}class SessionAcceptTimeoutComponent extends Entity{awake(){this.Timer=TimerMgr.getInst().newOnceTimer(5e3,this.timerCallback.bind(this))}timerCallback(){this.parent.id,this.parent.dispose()}destroy(){TimerMgr.getInst().remove(this.Timer),this.Timer=0}}class SessionIdleCheckerComponent extends Entity{awake(){this.RepeatedTimer=TimerMgr.getInst().newRepeatedTimer(SessionIdleCheckerComponent.CheckInteral,this.check.bind(this))}check(){let e=this.getParent(Session),t=TimeHelper.clientNow();t-e.LastRecvTime<SessionIdleCheckerComponent.SessionTimeoutTime&&t-e.LastSendTime<SessionIdleCheckerComponent.SessionTimeoutTime||(e.Error=ErrorCore.ERR_SessionSendOrRecvTimeout,e.dispose())}destroy(){TimerMgr.getInst().remove(this.RepeatedTimer),this.RepeatedTimer=0}}var DecoratorType,LockTypeCore,SceneTypeCore;SessionIdleCheckerComponent.CheckInteral=2e3,SessionIdleCheckerComponent.SessionTimeoutTime=15e3,function(e){e.OuterMsgHandler="OuterMsgHandler",e.InnerMsgHandler="InnerMsgHandler",e.ActorMessageHandler="ActorMessageHandler"}(DecoratorType||(DecoratorType={}));class OuterMessageMsgDispatcher extends Singleton{constructor(){super(...arguments),this._handlers=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorType.OuterMsgHandler);for(const t of e){let e=t[0],r=t[1],s=new e;this._handlers.set(r,s)}}handle(e,t){try{let r=MessageTypeMgr.getInst().getMessageType(t.constructor);if(r==MessageTypeCore.Response||r==MessageTypeCore.ActorResponse||r==MessageTypeCore.ActorLocationResponse)return coreWarn("OuterMessageMsgDispatcher.handle ignore response msg, bug got response msg from outer, please check! msg={0}",t.constructor.name),void e.OnResponse(t);let s=this._handlers.get(r);if(!s)throw new Error(`OuterMessageMsgDispatcher handle not found handler ${r}`);s.run(e,t)}catch(e){coreError("OuterMessageMsgDispatcher.handle error, msg={0}, {1}",t.constructor.name,e.stack)}}}class NetServerComponent extends Entity{init(e){this.delayInit(e)}async delayInit(e){await TimerMgr.getInst().waitAsync(5e3),coreLog("[scene {0}], 外网开启监听: {1}",this.domainScene().name,e.toString());let t=new WService,r=NetServices.getInst();t.initAcceptor(e,ServiceType.Outer),this.ServiceId=r.AddService(t),r.RegisterAcceptCallback(this.ServiceId,this.OnAccept.bind(this)),r.RegisterReadCallback(this.ServiceId,this.OnRead.bind(this)),r.RegisterErrorCallback(this.ServiceId,this.OnError.bind(this))}destroy(){NetServices.getInst().RemoveService(this.ServiceId)}OnError(e,t){let r=this.getChild(Session,e);null!=r&&(r.Error=t,r.dispose())}OnAccept(e,t){let r=this.addChildWithId(Session,e);r.init(this.ServiceId),r.RemoteAddress=t,r.addComponent(SessionAcceptTimeoutComponent),r.addComponent(SessionIdleCheckerComponent)}OnRead(e,t,r){let s=this.getChild(Session,e);null!=s&&(s.LastRecvTime=TimeHelper.clientNow(),OuterMessageMsgDispatcher.getInst().handle(s,r))}}class HashList{constructor(){this._hashTable={},this._head=this._tail=null,this._length=0}*iterator(){let e=this._head,t=0;for(;e;)if(yield e.value,e=e.next,t++,t>1e6){console.error("HashList possible circle loop");break}}[Symbol.iterator](){return this.iterator()}get head(){return this._head?this._head.value:null}get tail(){return this._tail?this._tail.value:null}get length(){return this._length}insert(e,t,r,s=!1){if(s&&this.isDuplicate(t))return null;if(null!=this._hashTable[e])return console.error(`key has exist, key=${e}`),null;let n=new LinkedListItem(e,t);this._hashTable[e]=n;let o=this._hashTable[r];return o?(n.prev=o,n.next=o.next,o.next?o.next.prev=n:this._tail=n,o.next=n,this._length++,e):null}get(e){let t=this._hashTable[e];if(null!=t)return t.value}moveToHead(e){let t=this._hashTable[e];null!=t&&t!==this._head&&(t===this._tail?(this._tail=t.prev,this._tail.next=null):(t.prev.next=t.next,t.next.prev=t.prev),this._head.prev=t,t.prev=null,t.next=this._head,this._head=t)}append(e,t,r=!1){if(r&&this.isDuplicate(t))return null;if(null!=this._hashTable[e])return console.error(`key has exist, key=${e}`),null;let s=new LinkedListItem(e,t);return this._hashTable[e]=s,this._tail?(s.prev=this._tail,this._tail.next=s,this._tail=s):this._head=this._tail=s,this._length++,e}prepend(e,t,r=!1){if(r&&this.isDuplicate(t))return null;if(null!=this._hashTable[e])return console.error(`key has exist, key=${e}`),null;let s=new LinkedListItem(e,t);return this._hashTable[e]=s,this._head?(s.next=this._head,this._head.prev=s,this._head=s):this._head=this._tail=s,this._length++,e}remove(e){let t=this._hashTable[e];if(t)return t===this._head?this._head=t.next:t===this._tail?this._tail=t.prev:(t.prev.next=t.next,t.next.prev=t.prev),t.next=null,t.prev=null,delete this._hashTable[e],this._length--,t.value}removeHead(){let e=this._head;if(e)return this._head.next?(this._head.next.prev=null,this._head=this._head.next):(this._head=null,this._tail=null),e.next=e.prev=null,delete this._hashTable[e.key],this._length--,e.value}removeTail(){let e=this._tail;if(e)return this._tail.prev?(this._tail.prev.next=null,this._tail=this._tail.prev):(this._head=null,this._tail=null),e.next=e.prev=null,delete this._hashTable[e.key],this._length--,e.value}toArray(){return[...this]}isDuplicate(e){return new Set(this.toArray()).has(e)}}class LinkedListItem{constructor(e,t){this.key=e,this.value=t,this.next=null,this.prev=null}}class CacheItem{constructor(){this.isChange=!1}}!function(e){e.Location="Location",e.ActorLocationSender="ActorLocationSender",e.Mailbox="Mailbox",e.DB="DB",e.GetGatePlayer="GetGatePlayer",e.CheckAccount="CheckAccount",e.C2G_LoginGate="C2G_LoginGate",e.UnitConnect="UnitConnect",e.Transfer="Transfer"}(LockTypeCore||(LockTypeCore={}));class DBSerializeMgr extends Singleton{constructor(){super(...arguments),this._name2CtorMap=new Map,this._ignoreKeys=new Set(["_id"])}awake(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.Transfer);for(const t of e){let e=t[0];this._name2CtorMap.set(e.name,e)}let t=DecoratorCollector.inst.get(DecoratorTypeCore.DB);for(const e of t){let t=e[0];this._name2CtorMap.set(t.name,t)}}registerType(e){this._name2CtorMap.set(e.name,e)}serializeToUint8Array(e){let t=this.serializeToObject(e);return BSON.serialize(t)}serializeToObject(e){if(null!=e){if("object"!=typeof e)return e;if(e instanceof Array){let t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=this.serializeToObject(e[r]);return t}if(e instanceof Map){let t={ctorName:"Map",keyList:new Array(e.size),valueList:new Array(e.size)},r=0;for(let[s,n]of e)t.keyList[r]=this.serializeToObject(s),t.valueList[r++]=this.serializeToObject(n);return t}if(e instanceof Set){let t={ctorName:"Set",valueList:new Array(e.size)},r=0;for(let s of e)t.valueList[r++]=this.serializeToObject(s);return t}if(null!=e.constructor){let t=Object.keys(e),r={ctorName:e.constructor.name};for(const s of t)this._ignoreKeys.has(s)||(r[s]=this.serializeToObject(e[s]));return r}return e}}deserialize(e){if(null==e)return;let t=e;if(e instanceof Uint8Array&&(t=BSON.deserialize(e)),null!=t.ctorName){if("Set"==t.ctorName){let e=new Set;for(let r=0;r<t.valueList.length;r++){let s=t.valueList[r];e.add(this.deserialize(s))}return e}if("Map"==t.ctorName){let e=new Map;for(let r=0;r<t.valueList.length;r++){let s=t.keyList[r],n=t.valueList[r];e.set(s,this.deserialize(n))}return e}let e=this._name2CtorMap.get(t.ctorName);if(!e)return void coreError(`${t.ctorName}不能识别的反序列化对象`);let r=new e;for(let e in t)"ctorName"!=e&&(this._ignoreKeys.has(e)||(r[e]=this.deserialize(t[e])));return r}if(t instanceof Array){let e=new Array(t.length);for(let r=0;r<t.length;r++){let s=t[r];e[r]=this.deserialize(s)}return e}return t}}class DBComponent extends Entity{awake(){DBComponent.inst=this}destroy(){DBComponent.inst=null}async init(e,t){return this.mongoClient=new MongoClient(e),await this.mongoClient.connect(),this.database=this.mongoClient.db(t),coreLog("数据库连接完成"),this.mongoClient.on("close",(()=>{coreError("数据库连接断开")})),this}getCollection(e){return this.database.collection(e)}async query(e,t){if(null==this.database)return;let r=RandomGenerator.RandomInt(1,10086)%DBComponent.TaskCount,s=await CoroutineLock.getInst().wait(LockTypeCore.DB,r.toString());try{let r=await this.getCollection(e.name).findOne(t);if(r){let e;e=Date.now();let t=DBSerializeMgr.getInst().deserialize(r);{let t=Date.now()-e;t>1&&coreWarn(`DBComponent deserialize cost time=${t}ms, 请考虑优化!`)}return t}}finally{s.dispose()}}async save(e,t){if(null==this.database)return;if(!e.constructor)return void coreWarn("储存的对象必须是class");let r=RandomGenerator.RandomInt(1,10086),s=await CoroutineLock.getInst().wait(LockTypeCore.DB,(r%DBComponent.TaskCount).toString());try{let r;r=Date.now();let s=DBSerializeMgr.getInst().serializeToObject(e);{let e=Date.now()-r;e>1&&coreWarn(`DBComponent serialize cost time=${e}ms, 请考虑优化!`)}coreLog("DBComponent save obj={0}",JSON.stringify(s)),await this.getCollection(e.constructor.name).replaceOne(t,s,{upsert:!0})}finally{s.dispose()}}async remove(e,t){if(null==this.database)return;let r=RandomGenerator.RandomInt(1,10086),s=await CoroutineLock.getInst().wait(LockTypeCore.DB,(r%DBComponent.TaskCount).toString());try{await this.getCollection(e.name).deleteOne(t)}finally{s.dispose()}}}DBComponent.TaskCount=32;class DBCacheComponent extends Entity{constructor(){super(...arguments),this.cacheList=new HashList}init(e){return this._config=e,this._filter={},this}async saveToDB(){if(null==DBComponent.inst)return;let e=this.cacheList;for(let t of e)t.isChange&&(t.isChange=!1,this._filter[this._config.key]=t.data[this._config.key],await DBComponent.inst.save(t.data,this._filter));let t=e.length-this._config.maxCache;for(let r=0;r<t;r++)e.removeTail()}async query(e){let t,r=this.cacheList,s=r.get(e);if(null==s){if(null==DBComponent.inst)return;if(this._filter[this._config.key]=e,t=await(DBComponent.inst?.query(this._config.type,this._filter)),null==t)return;s=new CacheItem,s.data=t,r.prepend(e,s)}else r.moveToHead(e),t=s.data;return t}save(e){let t=this.cacheList,r=e[this._config.key],s=t.get(r);null==s?(s=new CacheItem,t.prepend(r,s)):t.moveToHead(r),s.data=e,s.isChange=!0}async delete(e){let t=this.cacheList;null!=t.get(e)&&t.remove(e),this._filter[this._config.key]=e,await DBComponent.inst.remove(this._config.type,this._filter)}}class DBCacheComponentMgr extends Entity{constructor(){super(...arguments),this._cacheList=[],this._type2ComMap=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.DB);for(const t of e){if(1==t.length)continue;let e=t[0],r=t[1],s=t[2],n=t[3],o=this.addChild(DBCacheComponent).init({isNumberKey:s,key:r,maxCache:n,type:e});this._cacheList.push(o),this._type2ComMap.set(e,o)}}init(e){return coreLog(`[DBCacheComponentMgr] init, cacheInterval: ${e}`),this.startTimer(e),this}async startTimer(e){for(;!this.isDisposed;)await TimerMgr.getInst().waitAsync(e),await this.saveNow()}async saveNow(){let e=Date.now(),t=[];for(let e of this._cacheList)t.push(e.saveToDB());await Promise.all(t);{let t=Date.now()-e;t>3e3&&coreWarn(`[DBCacheComponentMgr]储存数据到db消耗时间过长,请考虑优化,cost=${t}ms`)}}getCacheCom(e){return this._type2ComMap.get(e)}}!function(e){e.None="None",e.Process="Process",e.Realm="Realm",e.Gate="Gate",e.Location="Location",e.DBCache="DBCache",e.Map="Map"}(SceneTypeCore||(SceneTypeCore={}));var __decorate$t=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let Unit=class extends Entity{};Unit=__decorate$t([DBWithKey("id",!0,1e3)],Unit);class UnitComponent extends Entity{get(e){return this.getChild(Unit,e)}remove(e){let t=this.getChild(Unit,e);t?.dispose()}}class GateMapComponent extends Entity{awake(){this.mapScene=EntitySceneFactory.createScene({sceneType:SceneTypeCore.Map,id:IdGenerator.getInst().generateId(),name:"GateMap",parent:this}),this.mapScene.addComponent(UnitComponent)}addUnit(e){this.mapScene.getComponent(UnitComponent).addChild(e)}}var InnerMessageCoreOpcode;!function(e){e[e._ActorResponse=1e3]="_ActorResponse",e[e.DBCacheResponse=1001]="DBCacheResponse",e[e.DBQueryResponse=1003]="DBQueryResponse",e[e.DBDeleteResponse=1005]="DBDeleteResponse",e[e.ObjectAddResponse=1008]="ObjectAddResponse",e[e.ObjectGetResponse=1010]="ObjectGetResponse",e[e.ObjectLockResponse=1011]="ObjectLockResponse",e[e.ObjectRemoveResponse=1014]="ObjectRemoveResponse",e[e.ObjectUnLockResponse=1016]="ObjectUnLockResponse",e[e.G2R_GetLoginKey=1017]="G2R_GetLoginKey",e[e.M2G_ConnectUnit=1020]="M2G_ConnectUnit",e[e.M2G_DisconnectUnit=1022]="M2G_DisconnectUnit",e[e.M2M_UnitTransferResponse=1023]="M2M_UnitTransferResponse",e[e.DBCacheRequest=1002]="DBCacheRequest",e[e.DBQueryRequest=1004]="DBQueryRequest",e[e.DBDeleteRequest=1006]="DBDeleteRequest",e[e.ObjectAddRequest=1007]="ObjectAddRequest",e[e.ObjectGetRequest=1009]="ObjectGetRequest",e[e.ObjectLockRequest=1012]="ObjectLockRequest",e[e.ObjectRemoveRequest=1013]="ObjectRemoveRequest",e[e.ObjectUnLockRequest=1015]="ObjectUnLockRequest",e[e.R2G_GetLoginKey=1018]="R2G_GetLoginKey",e[e.G2M_ConnectUnit=1019]="G2M_ConnectUnit",e[e.G2M_DisconnectUnit=1021]="G2M_DisconnectUnit",e[e.M2M_UnitTransferRequest=1024]="M2M_UnitTransferRequest"}(InnerMessageCoreOpcode||(InnerMessageCoreOpcode={}));var __decorate$s=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let _ActorResponse=class{constructor(e){Object.assign(this,e)}};_ActorResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode._ActorResponse,"ActorResponse")],_ActorResponse);let DBCacheResponse=class{constructor(e){Object.assign(this,e)}};DBCacheResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.DBCacheResponse,"ActorResponse")],DBCacheResponse);let DBQueryResponse=class{constructor(e){Object.assign(this,e)}};DBQueryResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.DBQueryResponse,"ActorResponse")],DBQueryResponse);let DBDeleteResponse=class{constructor(e){Object.assign(this,e)}};DBDeleteResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.DBDeleteResponse,"ActorResponse")],DBDeleteResponse);let ObjectAddResponse=class{constructor(e){Object.assign(this,e)}};ObjectAddResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.ObjectAddResponse,"ActorResponse")],ObjectAddResponse);let ObjectGetResponse=class{constructor(e){Object.assign(this,e)}};ObjectGetResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.ObjectGetResponse,"ActorResponse")],ObjectGetResponse);let ObjectLockResponse=class{constructor(e){Object.assign(this,e)}};ObjectLockResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.ObjectLockResponse,"ActorResponse")],ObjectLockResponse);let ObjectRemoveResponse=class{constructor(e){Object.assign(this,e)}};ObjectRemoveResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.ObjectRemoveResponse,"ActorResponse")],ObjectRemoveResponse);let ObjectUnLockResponse=class{constructor(e){Object.assign(this,e)}};ObjectUnLockResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.ObjectUnLockResponse,"ActorResponse")],ObjectUnLockResponse);let G2R_GetLoginKey=class{constructor(e){Object.assign(this,e)}};G2R_GetLoginKey=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.G2R_GetLoginKey,"ActorResponse")],G2R_GetLoginKey);let M2G_ConnectUnit=class{constructor(e){Object.assign(this,e)}};M2G_ConnectUnit=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.M2G_ConnectUnit,"ActorLocationResponse")],M2G_ConnectUnit);let M2G_DisconnectUnit=class{constructor(e){Object.assign(this,e)}};M2G_DisconnectUnit=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.M2G_DisconnectUnit,"ActorLocationResponse")],M2G_DisconnectUnit);let M2M_UnitTransferResponse=class{constructor(e){Object.assign(this,e)}};M2M_UnitTransferResponse=__decorate$s([MessageDecorator(InnerMessageCoreOpcode.M2M_UnitTransferResponse,"ActorResponse")],M2M_UnitTransferResponse);let DBCacheRequest=class{constructor(e){Object.assign(this,e)}};DBCacheRequest=__decorate$s([ResponseTypeDecorator(DBCacheResponse),MessageDecorator(InnerMessageCoreOpcode.DBCacheRequest,"ActorRequest")],DBCacheRequest);let DBQueryRequest=class{constructor(e){Object.assign(this,e)}};DBQueryRequest=__decorate$s([ResponseTypeDecorator(DBQueryResponse),MessageDecorator(InnerMessageCoreOpcode.DBQueryRequest,"ActorRequest")],DBQueryRequest);let DBDeleteRequest=class{constructor(e){Object.assign(this,e)}};DBDeleteRequest=__decorate$s([ResponseTypeDecorator(DBDeleteResponse),MessageDecorator(InnerMessageCoreOpcode.DBDeleteRequest,"ActorRequest")],DBDeleteRequest);let ObjectAddRequest=class{constructor(e){Object.assign(this,e)}};ObjectAddRequest=__decorate$s([ResponseTypeDecorator(ObjectAddResponse),MessageDecorator(InnerMessageCoreOpcode.ObjectAddRequest,"ActorRequest")],ObjectAddRequest);let ObjectGetRequest=class{constructor(e){Object.assign(this,e)}};ObjectGetRequest=__decorate$s([ResponseTypeDecorator(ObjectGetResponse),MessageDecorator(InnerMessageCoreOpcode.ObjectGetRequest,"ActorRequest")],ObjectGetRequest);let ObjectLockRequest=class{constructor(e){Object.assign(this,e)}};ObjectLockRequest=__decorate$s([ResponseTypeDecorator(ObjectLockResponse),MessageDecorator(InnerMessageCoreOpcode.ObjectLockRequest,"ActorRequest")],ObjectLockRequest);let ObjectRemoveRequest=class{constructor(e){Object.assign(this,e)}};ObjectRemoveRequest=__decorate$s([ResponseTypeDecorator(ObjectRemoveResponse),MessageDecorator(InnerMessageCoreOpcode.ObjectRemoveRequest,"ActorRequest")],ObjectRemoveRequest);let ObjectUnLockRequest=class{constructor(e){Object.assign(this,e)}};ObjectUnLockRequest=__decorate$s([ResponseTypeDecorator(ObjectUnLockResponse),MessageDecorator(InnerMessageCoreOpcode.ObjectUnLockRequest,"ActorRequest")],ObjectUnLockRequest);let R2G_GetLoginKey=class{constructor(e){Object.assign(this,e)}};R2G_GetLoginKey=__decorate$s([ResponseTypeDecorator(G2R_GetLoginKey),MessageDecorator(InnerMessageCoreOpcode.R2G_GetLoginKey,"ActorRequest")],R2G_GetLoginKey);let G2M_ConnectUnit=class{constructor(e){Object.assign(this,e)}};G2M_ConnectUnit=__decorate$s([ResponseTypeDecorator(M2G_ConnectUnit),MessageDecorator(InnerMessageCoreOpcode.G2M_ConnectUnit,"ActorLocationRequest")],G2M_ConnectUnit);let G2M_DisconnectUnit=class{constructor(e){Object.assign(this,e)}};G2M_DisconnectUnit=__decorate$s([ResponseTypeDecorator(M2G_DisconnectUnit),MessageDecorator(InnerMessageCoreOpcode.G2M_DisconnectUnit,"ActorLocationRequest")],G2M_DisconnectUnit);let M2M_UnitTransferRequest=class{constructor(e){this.entitys=[],Object.assign(this,e)}};var NetworkProtocol;M2M_UnitTransferRequest=__decorate$s([ResponseTypeDecorator(M2M_UnitTransferResponse),MessageDecorator(InnerMessageCoreOpcode.M2M_UnitTransferRequest,"ActorRequest")],M2M_UnitTransferRequest),function(e){e[e.TCP=0]="TCP",e[e.Websocket=1]="Websocket"}(NetworkProtocol||(NetworkProtocol={}));class InnerMessageDispatcher extends Singleton{constructor(){super(...arguments),this._handlers=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorType.InnerMsgHandler);for(const t of e){let e=t[0],r=t[1],s=new e;this._handlers.set(r,s)}}handle(e,t){let r=MessageTypeMgr.getInst().getMessageType(t.constructor),s=this._handlers.get(r);s?s.run(e,t):coreError("InnerMessageMsgDispatcher handle not found handler",r)}}class NetInnerComponent extends Entity{constructor(){super(...arguments),this.InnerProtocol=NetworkProtocol.Websocket}awake(){this.delayInit(),NetInnerComponent.inst=this}destroy(){NetInnerComponent.inst=null,NetServices.getInst().RemoveService(this.ServiceId)}async delayInit(){await TimerMgr.getInst().waitAsync(5e3);let e=ProcessMgr.getInst().getCurProcessInfo(),t=e.innerAddress,r=NetServices.getInst();switch(coreLog("[进程{0}]内网开启监听: {1}",e.id,t.toString()),this.InnerProtocol){case NetworkProtocol.TCP:break;case NetworkProtocol.Websocket:{let e=new WService;e.initAcceptor(t,ServiceType.Inner),this.ServiceId=r.AddService(e);break}}r.RegisterAcceptCallback(this.ServiceId,this.onAccept.bind(this)),r.RegisterReadCallback(this.ServiceId,this.onRead.bind(this)),r.RegisterErrorCallback(this.ServiceId,this.onError.bind(this))}onRead(e,t,r){let s=this.getChild(Session,e);null!=s&&(s.LastRecvTime=TimeHelper.clientFrameTime(),this.handleMessage(t,r))}handleMessage(e,t){InnerMessageDispatcher.getInst().handle(e,t)}onError(e,t){let r=this.getChild(Session,e);null!=r&&(r.Error=t,r.dispose())}onAccept(e,t){let r=this.addChildWithId(Session,e);r.init(this.ServiceId),r.RemoteAddress=t}createInner(e,t){let r=this.addChildWithId(Session,e);return r.init(this.ServiceId),r.RemoteAddress=t,NetServices.getInst().CreateChannel(this.ServiceId,e,t),r}get(e){let t=this.getChild(Session,e);if(null!=t)return t;let r,s=Options.getInst().process,n=ProcessMgr.getInst().getProcessInfo(s),o=ProcessMgr.getInst().getProcessInfo(e);if(null!=o){if(null!=n)return o.machineId==n.machineId?(coreLog("同一台机器，走内网地址, 当前进程={0}, 目标进程={1}",n.id,o.id),r=o.innerAddress):r=o.outerAddress,t=this.createInner(e,r),t;coreError("当前进程不存在, processId={0}",s)}else coreError("目标进程不存在, channelId={0}",e)}}class ProcessActorId{init(e){let t=ObjectPool.getInst(),r=t.fetch(InstanceIdStruct);r.initArgs1(e),this.Process=r.Process,r.Process=Options.getInst().process,r.updateResult(),this.ActorId=r.ToLong(),t.recycle(r)}}class ResponseTypeMgr extends Singleton{constructor(){super(...arguments),this._requestResponse=new Map}awake(){let e=DecoratorCollector.inst.get(DecoratorTypeCore.Message);for(const t of e){let e=t[0];t[1]==MessageTypeCore.ActorLocationMessage&&this._requestResponse.set(e,_ActorResponse)}let t=DecoratorCollector.inst.get(DecoratorTypeCore.MessageResponse);for(const e of t){let t=e[0],r=e[1];this._requestResponse.set(t,r)}}getResponseType(e){let t=this._requestResponse.get(e);if(!t)throw new Error(`not found response type, request type: ${e.name}`);return t}}class ActorHelper{static createResponse(e,t){let r=new(ResponseTypeMgr.getInst().getResponseType(e.constructor));return r.error=t,r.rpcId=e.rpcId,r}}class ActorMessageSender{constructor(e,t,r){this.ActorId=e,this.Request=t,this.CreateTime=TimeHelper.serverNow(),this.Tcs=r}run(e){e.error==ErrorCore.ERR_ActorTimeout&&coreLog(`${this.Request.constructor.name}超时了, 请检查`),this.Tcs.setResult(e),this.Tcs=null}}class ActorMessageSenderMgr extends Singleton{constructor(){super(...arguments),this.TIMEOUT_TIME=1e4,this.RpcId=1,this.requestCallback=new Map,this.TimeoutActorMessageSenders=new Array}awake(){this.TimeoutCheckTimer=TimerMgr.getInst().newRepeatedTimer(1e3,this.check.bind(this))}destroy(){TimerMgr.getInst().remove(this.TimeoutCheckTimer),this.TimeoutCheckTimer=0,this.TimeoutActorMessageSenders=[]}check(){let e=TimeHelper.serverNow();for(let[t,r]of this.requestCallback){if(e<r.CreateTime+this.TIMEOUT_TIME)break;this.TimeoutActorMessageSenders.push(t)}for(let e=0;e<this.TimeoutActorMessageSenders.length;e++){const t=this.TimeoutActorMessageSenders[e];let r=this.requestCallback.get(t);this.requestCallback.delete(t);try{let e=ActorHelper.createResponse(r.Request,ErrorCore.ERR_ActorTimeout);r.run(e)}catch(e){coreError(e)}}this.TimeoutActorMessageSenders=[]}send(e,t){if(0==e)return void coreError(`actor id is 0: ${t}`);let r=ObjectPool.getInst(),s=r.fetch(ProcessActorId);if(s.init(e),s.Process!=Options.getInst().process){try{NetInnerComponent.inst.get(s.Process).SendWithId(s.ActorId,t)}catch(r){coreError("ActorMessageSenderMgr.send error, actorid={0}, msg={1}, {2}",e,t.constructor.name,r.stack)}r.recycle(s)}else NetInnerComponent.inst.handleMessage(e,t)}getRpcId(){let e=++this.RpcId;return this.RpcId>1e6&&(this.RpcId=1),e}async callWithRpcId(e,t,r){if(0==e){return ActorHelper.createResponse(r,ErrorCore.ERR_ActorIdIsZero)}let s=Task.create();this.requestCallback.set(t,new ActorMessageSender(e,r,s)),this.send(e,r);let n=TimeHelper.serverFrameTime(),o=await s,i=TimeHelper.serverFrameTime()-n;return i>200&&coreLog(`actor rpc time > 200: ${i} ${r.constructor.name}`),o}async call(e,t){try{if(t.rpcId=this.getRpcId(),0==e){return ActorHelper.createResponse(t,ErrorCore.ERR_ActorIdIsZero)}return await this.callWithRpcId(e,t.rpcId,t)}catch(r){return coreError("ActorMessageSenderMgr.call error, actorid={0}, msg={1}, {2}",e,t.constructor.name,r.stack),ActorHelper.createResponse(t,ErrorCore.ERR_ActorTimeout)}}handleActorResponse(e){let t=this.requestCallback.get(e.rpcId);t&&(this.requestCallback.delete(e.rpcId),t.run(e))}}class ActorMsgHelper{static async call(e,t,r){return await ActorMessageSenderMgr.getInst().call(e,t)}static send(e,t){ActorMessageSenderMgr.getInst().send(e,t)}}class ObjectSerializeMgr extends Singleton{constructor(){super(...arguments),this.typeMap=new Map,this.typeCodeMap=new Map}awake(){let e=[],t=DecoratorCollector.inst.get(DecoratorTypeCore.Transfer);for(const r of t){let t=r[0];e.push(t)}let r=DecoratorCollector.inst.get(DecoratorTypeCore.DB);for(const t of r){let r=t[0];e.push(r)}for(let t=0;t<e.length;t++){let r=e[t],s={type:r,typeCode:40500+t+1};this.typeMap.set(r,s),this.typeCodeMap.set(s.typeCode,s),coreLog("ObjectSerializeMgr 注册类型 = {0}, typeCode = {1}",s.type.name,s.typeCode),addExtension({Class:s.type,tag:s.typeCode,encode:(e,t)=>(e.onSerialize&&e.onSerialize(),t(Object.assign({},e))),decode:e=>(Object.setPrototypeOf(e,r.prototype),e.onDeserialize&&e.onDeserialize(),e)})}this._encoder=new Encoder({structuredClone:!0}),this._sameMachineEncoder=new Encoder({structuredClone:!0,structures:[],getStructures:()=>decode(readFileSync("cbor-x-structures.cbor"))||[],saveStructures(e){writeFileSync("cbor-x-structures.cbor",encode(e))}}),coreLog("ObjectSerializeMgr nodejs环境加速是否开启: {0}",isNativeAccelerationEnabled),isNativeAccelerationEnabled||coreWarn("ObjectSerializeMgr nodejs环境加速没开启, 请检查cbor-x的依赖是否正常")}serialize(e){let t=this._encoder.encode(e);return new Uint8Array(t)}serializeSameMachine(e){let t;return t=this._sameMachineEncoder.encode(e),new Uint8Array(t)}deserialize(e){return this._encoder.decode(e)}deserializeSameMachine(e){let t;return t=this._sameMachineEncoder.decode(e),t}getTypeCode(e){let t=this.typeMap.get(e);if(null==t)throw new Error(`不存在typecode的类型, type=${e}`);return t.typeCode}getType(e){let t=this.typeCodeMap.get(e);if(null==t)throw new Error(`不存在typecode的类型, typeCode=${e}`);return t.type}}class DBHelper{static getDB(){return SceneMgr.getInst().getSceneByType(SceneTypeCore.DBCache)[0].instanceId}static async query(e,t){let r=this.getDB(),s=ObjectSerializeMgr.getInst(),n=s.getTypeCode(e),o=new DBQueryRequest;"number"==typeof t?o.numberKey=t:o.stringKey=t,o.typeCode=n;let i=await ActorMsgHelper.call(r,o,DBQueryResponse);if(i.error!=ErrorCore.ERR_Success)return coreError("DBHelper.query查询失败,error= {0}",i.error),[i.error,null];if(null==i.data)return[i.error,null];let a=ProcessMgr.getInst().actorIdIsInMachine(r)?s.deserializeSameMachine(i.data):s.deserialize(i.data);return[i.error,a]}static async save(e){if(null==e)return coreLog("dbhelper保存对象为null"),!1;if(null==e.constructor)return coreLog("dbhelper保存对象的构造函数为null"),!1;let t=ObjectSerializeMgr.getInst(),r=this.getDB(),s=ProcessMgr.getInst().actorIdIsInMachine(r)?t.serializeSameMachine(e):t.serialize(e),n=await ActorMsgHelper.call(r,new DBCacheRequest({data:s}),DBCacheResponse);return n.error==ErrorCore.ERR_Success||(coreError("DBHelper.save保存失败,error= {0}, type={1}",n.error,e.constructor.name),!1)}static async delete(e,t){let r=this.getDB(),s=ObjectSerializeMgr.getInst().getTypeCode(e),n=new DBDeleteRequest;n.typeCode=s,"number"==typeof t?n.numberKey=t:n.stringKey=t;let o=await ActorMsgHelper.call(r,n,DBDeleteResponse);o.error!=ErrorCore.ERR_Success&&coreError(`DBHelper.delete删除失败,error=${o.error}`)}}var __decorate$r=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let GatePlayer=class extends Entity{constructor(){super(...arguments),this.ref=0}get account(){return this._account}init(e){return this._account=e,this}onDeserialize(){this.ref=0}async createUnit(e){let t=this.addChild(Unit);return await EventSystem.getInst().publishAsync(this.domainScene(),AfterCreateUnit.create({unit:t,args:e})),!!await DBHelper.save(t)&&(t.dispose(),!0)}};__decorate$r([IgnoreSerialize],GatePlayer.prototype,"ref",void 0),GatePlayer=__decorate$r([DBWithKey("_account",!1,1e3)],GatePlayer);class PlayerSessionComponent extends Entity{}class GatePlayerUnitComponent extends Entity{constructor(){super(...arguments),this.unitId=0}}class GatePlayerComponent extends Entity{constructor(){super(...arguments),this._accountPlayers=new Map}async getPlayer(e){let t=await CoroutineLock.getInst().wait(LockTypeCore.GetGatePlayer,e);try{let t=this._accountPlayers.get(e);if(t)return t;{let[r,s]=await DBHelper.query(GatePlayer,e);if(r!=ErrorCore.ERR_Success)return null;t=s}return t?this.addChild(t):(t=this.addChild(GatePlayer).init(e),await EventSystem.getInst().publishAsync(this.domainScene(),AfterCreateGatePlayer.create({player:t}))),t.addComponent(PlayerSessionComponent),t.addComponent(GatePlayerUnitComponent),this._accountPlayers.set(e,t),t}finally{t.dispose()}}removePlayer(e){this._accountPlayers.delete(e)}}class GateSessionKeyComponent extends Entity{constructor(){super(...arguments),this._sessionKey=new Map}newKey(e){let t;for(let e=0;e<1e3&&(t=RandomGenerator.RandomInt(1,9999999),this._sessionKey.has(t));e++);return this.add(t,e),t}add(e,t){this._sessionKey.set(e,t),this.timeoutRemoveKey(e)}getAccount(e){return this._sessionKey.get(e)}remove(e){this._sessionKey.delete(e)}async timeoutRemoveKey(e){await TimerMgr.getInst().waitAsync(2e4),this._sessionKey.delete(e)}}class LockInfo extends Entity{init(e,t){return this.CoroutineLock=t,this.LockInstanceId=e,this}destroy(){this.CoroutineLock.dispose(),this.LockInstanceId=0}}class LocationComponent extends Entity{constructor(){super(...arguments),this.locations=new Map,this.lockInfos=new Map}async add(e,t){let r=await CoroutineLock.getInst().wait(LockTypeCore.Location,e.toString());try{this.locations.set(e,t),coreLog(`location add key: ${e} instanceId: ${t}`)}finally{r.dispose()}}async remove(e){let t=await CoroutineLock.getInst().wait(LockTypeCore.Location,e.toString());try{this.locations.delete(e),coreLog(`location remove key: ${e}`)}finally{t.dispose()}}async lock(e,t,r=0){let s=await CoroutineLock.getInst().wait(LockTypeCore.Location,e.toString()),n=this.addChild(LockInfo).init(t,s);if(this.lockInfos.set(e,n),coreLog(`location lock key: ${e} instanceId: ${t}`),r>0){(async()=>{let s=n.instanceId;await TimerMgr.getInst().waitAsync(r),n.instanceId==s&&this.unLock(e,t,t)})()}}unLock(e,t,r){let s=this.lockInfos.get(e);s?t==s.LockInstanceId?(coreLog(`location unlock key: ${e} instanceId: ${t} newInstanceId: ${r}`),this.locations.set(e,r),this.lockInfos.delete(e),s.dispose()):coreError(`location unlock oldInstanceId is different: ${e} {oldInstanceId}`):coreError(`location unlock not found key: ${e} {oldInstanceId}`)}async get(e){let t=await CoroutineLock.getInst().wait(LockTypeCore.Location,e.toString());try{return this.locations.get(e)}finally{t.dispose()}}}class AfterCreateSceneHandler{static run(e,t){switch(t.sceneType){case SceneTypeCore.DBCache:{null!=t.dbAddress&&t.dbAddress.length>0&&e.addComponent(DBComponent).init(t.dbAddress,t.dbName);let r=t.dbCacheInterval||3e5;e.addComponent(DBCacheComponentMgr).init(r);break}case SceneTypeCore.Gate:e.addComponent(GateSessionKeyComponent),e.addComponent(GatePlayerComponent),e.addComponent(GateMapComponent);break;case SceneTypeCore.Map:e.addComponent(UnitComponent);break;case SceneTypeCore.Location:e.addComponent(LocationComponent)}}}class SceneFactory{static createByInfo(e,t){let r=EntitySceneFactory.createScene({id:t.id,instanceId:t.instanceId,sceneType:t.sceneType,name:t.name,parent:e});if(r.addComponent(MailBoxComponent).init(MailboxType.UnOrderMessageDispatcher),t.outerPort){let e=new IPEndPoint(t.innerIp,t.outerPort);r.addComponent(NetServerComponent).init(e)}AfterCreateSceneHandler.run(r,t);let s=Root.getInst().scene;return EventSystem.getInst().publish(s,SceneCreateEvent.create({scene:r,sceneInfo:t})),r}static createChildScene(e,t){let r=SceneMgr.getInst().getSceneById(e.id),s=t.instanceId;return s||(s=InstanceIdHelper.getSceneInstanceId(r.processId,t.id)),this.createByInfo(e,{id:t.id,name:t.name,innerIp:r.innerIp,outerIp:r.outerIp,machineId:r.machineId,processId:r.processId,sceneType:t.sceneType,instanceId:s})}}function InnerMsgDecorator(e){return function(t){DecoratorCollector.inst.add(DecoratorType.InnerMsgHandler,t,e)}}function OuterMsgDecorator(e){return function(t){DecoratorCollector.inst.add(DecoratorType.OuterMsgHandler,t,e)}}class AMRpcHandler{handle(e,t,r){this.handleAsync(e,t,r)}async handleAsync(e,t,r){try{let s=t.rpcId,n=e.instanceId,o=new r;try{await this.run(e,t,o)}catch(e){coreError("{0}.run error, {1}",this.constructor.name,e.stack),o.error=ErrorCore.ERR_RpcFail,o.message=e.message}if(e.instanceId!=n)return;o.rpcId=s,e.Send(o)}catch(e){coreError("{0}消息处理失败",this.constructor.name)}}}var __decorate$q=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let _ActorResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};_ActorResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode._ActorResponse)],_ActorResponse_Parser);let DBCacheResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};DBCacheResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.DBCacheResponse)],DBCacheResponse_Parser);let DBQueryResponse_Parser=class{static encode(e,t){null!=t.data&&e.uint32(26).bytes(t.data),e.uint32(32).uint32(t.rpcId),e.uint32(40).uint32(t.error),null!=t.message&&e.uint32(50).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.data=e.bytes();break;case 4:t.rpcId=e.uint32();break;case 5:t.error=e.uint32();break;case 6:t.message=e.string();break;default:e.skipType(7&r)}}}};DBQueryResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.DBQueryResponse)],DBQueryResponse_Parser);let DBDeleteResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};DBDeleteResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.DBDeleteResponse)],DBDeleteResponse_Parser);let ObjectAddResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};ObjectAddResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectAddResponse)],ObjectAddResponse_Parser);let ObjectGetResponse_Parser=class{static encode(e,t){e.uint32(24).int64(t.instanceId),e.uint32(32).uint32(t.rpcId),e.uint32(40).uint32(t.error),null!=t.message&&e.uint32(50).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.instanceId=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;case 5:t.error=e.uint32();break;case 6:t.message=e.string();break;default:e.skipType(7&r)}}}};ObjectGetResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectGetResponse)],ObjectGetResponse_Parser);let ObjectLockResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};ObjectLockResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectLockResponse)],ObjectLockResponse_Parser);let ObjectRemoveResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};ObjectRemoveResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectRemoveResponse)],ObjectRemoveResponse_Parser);let ObjectUnLockResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};ObjectUnLockResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectUnLockResponse)],ObjectUnLockResponse_Parser);let G2R_GetLoginKey_Parser=class{static encode(e,t){e.uint32(24).int64(t.key),e.uint32(32).uint32(t.rpcId),e.uint32(40).uint32(t.error),null!=t.message&&e.uint32(50).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.key=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;case 5:t.error=e.uint32();break;case 6:t.message=e.string();break;default:e.skipType(7&r)}}}};G2R_GetLoginKey_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.G2R_GetLoginKey)],G2R_GetLoginKey_Parser);let M2G_ConnectUnit_Parser=class{static encode(e,t){e.uint32(24).int64(t.sceneInstanceId),e.uint32(32).uint32(t.rpcId),e.uint32(40).uint32(t.error),null!=t.message&&e.uint32(50).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.sceneInstanceId=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;case 5:t.error=e.uint32();break;case 6:t.message=e.string();break;default:e.skipType(7&r)}}}};M2G_ConnectUnit_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.M2G_ConnectUnit)],M2G_ConnectUnit_Parser);let M2G_DisconnectUnit_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};M2G_DisconnectUnit_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.M2G_DisconnectUnit)],M2G_DisconnectUnit_Parser);let M2M_UnitTransferResponse_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};M2M_UnitTransferResponse_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.M2M_UnitTransferResponse)],M2M_UnitTransferResponse_Parser);let DBCacheRequest_Parser=class{static encode(e,t){e.uint32(26).bytes(t.data),e.uint32(32).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.data=e.bytes();break;case 4:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};DBCacheRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.DBCacheRequest)],DBCacheRequest_Parser);let DBQueryRequest_Parser=class{static encode(e,t){null!=t.numberKey&&e.uint32(24).int64(t.numberKey),null!=t.stringKey&&e.uint32(34).string(t.stringKey),e.uint32(40).int32(t.typeCode),e.uint32(48).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.numberKey=e.int64().toNumber();break;case 4:t.stringKey=e.string();break;case 5:t.typeCode=e.int32();break;case 6:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};DBQueryRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.DBQueryRequest)],DBQueryRequest_Parser);let DBDeleteRequest_Parser=class{static encode(e,t){null!=t.numberKey&&e.uint32(24).int64(t.numberKey),null!=t.stringKey&&e.uint32(34).string(t.stringKey),e.uint32(40).int32(t.typeCode),e.uint32(48).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.numberKey=e.int64().toNumber();break;case 4:t.stringKey=e.string();break;case 5:t.typeCode=e.int32();break;case 6:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};DBDeleteRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.DBDeleteRequest)],DBDeleteRequest_Parser);let ObjectAddRequest_Parser=class{static encode(e,t){e.uint32(24).int64(t.key),e.uint32(32).int64(t.instanceId),e.uint32(40).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.key=e.int64().toNumber();break;case 4:t.instanceId=e.int64().toNumber();break;case 5:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};ObjectAddRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectAddRequest)],ObjectAddRequest_Parser);let ObjectGetRequest_Parser=class{static encode(e,t){e.uint32(24).int64(t.key),e.uint32(32).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.key=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};ObjectGetRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectGetRequest)],ObjectGetRequest_Parser);let ObjectLockRequest_Parser=class{static encode(e,t){e.uint32(24).int64(t.key),e.uint32(32).int64(t.instanceId),e.uint32(40).int32(t.time),e.uint32(48).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.key=e.int64().toNumber();break;case 4:t.instanceId=e.int64().toNumber();break;case 5:t.time=e.int32();break;case 6:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};ObjectLockRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectLockRequest)],ObjectLockRequest_Parser);let ObjectRemoveRequest_Parser=class{static encode(e,t){e.uint32(24).int64(t.key),e.uint32(32).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.key=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};ObjectRemoveRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectRemoveRequest)],ObjectRemoveRequest_Parser);let ObjectUnLockRequest_Parser=class{static encode(e,t){null!=t.key&&e.uint32(24).int64(t.key),null!=t.oldInstanceId&&e.uint32(32).int64(t.oldInstanceId),null!=t.instanceId&&e.uint32(40).int64(t.instanceId),e.uint32(48).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.key=e.int64().toNumber();break;case 4:t.oldInstanceId=e.int64().toNumber();break;case 5:t.instanceId=e.int64().toNumber();break;case 6:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};ObjectUnLockRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.ObjectUnLockRequest)],ObjectUnLockRequest_Parser);let R2G_GetLoginKey_Parser=class{static encode(e,t){e.uint32(26).string(t.account),e.uint32(32).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.account=e.string();break;case 4:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};R2G_GetLoginKey_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.R2G_GetLoginKey)],R2G_GetLoginKey_Parser);let G2M_ConnectUnit_Parser=class{static encode(e,t){e.uint32(24).int64(t.sessionInstanceId),e.uint32(32).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.sessionInstanceId=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};G2M_ConnectUnit_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.G2M_ConnectUnit)],G2M_ConnectUnit_Parser);let G2M_DisconnectUnit_Parser=class{static encode(e,t){e.uint32(24).int64(t.sessionInstanceId),e.uint32(32).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.sessionInstanceId=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};G2M_DisconnectUnit_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.G2M_DisconnectUnit)],G2M_DisconnectUnit_Parser);let M2M_UnitTransferRequest_Parser=class{static encode(e,t){null!=t.oldInstanceId&&e.uint32(24).int64(t.oldInstanceId),null!=t.unit&&e.uint32(34).bytes(t.unit);for(const r of t.entitys)e.uint32(42).bytes(r);e.uint32(48).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.oldInstanceId=e.int64().toNumber();break;case 4:t.unit=e.bytes();break;case 5:{let r=e.bytes();t.entitys.push(r);break}case 6:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};var OuterMessageCoreOpcode;M2M_UnitTransferRequest_Parser=__decorate$q([MessageParserDecorator(InnerMessageCoreOpcode.M2M_UnitTransferRequest)],M2M_UnitTransferRequest_Parser),function(e){e[e.R2C_Login=2e3]="R2C_Login",e[e.G2C_LoginGate=2002]="G2C_LoginGate",e[e.G2C_Ping=2004]="G2C_Ping",e[e.C2G_TestPressure=2006]="C2G_TestPressure",e[e.C2R_Login=2001]="C2R_Login",e[e.C2G_LoginGate=2003]="C2G_LoginGate",e[e.C2G_Ping=2005]="C2G_Ping"}(OuterMessageCoreOpcode||(OuterMessageCoreOpcode={}));var __decorate$p=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let R2C_Login_Parser=class{static encode(e,t){null!=t.address&&e.uint32(26).string(t.address),null!=t.key&&e.uint32(32).int64(t.key),e.uint32(40).uint32(t.rpcId),e.uint32(48).uint32(t.error),null!=t.message&&e.uint32(58).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.address=e.string();break;case 4:t.key=e.int64().toNumber();break;case 5:t.rpcId=e.uint32();break;case 6:t.error=e.uint32();break;case 7:t.message=e.string();break;default:e.skipType(7&r)}}}};R2C_Login_Parser=__decorate$p([MessageParserDecorator(OuterMessageCoreOpcode.R2C_Login)],R2C_Login_Parser);let G2C_LoginGate_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId),e.uint32(32).uint32(t.error),null!=t.message&&e.uint32(42).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.rpcId=e.uint32();break;case 4:t.error=e.uint32();break;case 5:t.message=e.string();break;default:e.skipType(7&r)}}}};G2C_LoginGate_Parser=__decorate$p([MessageParserDecorator(OuterMessageCoreOpcode.G2C_LoginGate)],G2C_LoginGate_Parser);let G2C_Ping_Parser=class{static encode(e,t){null!=t.time&&e.uint32(24).int64(t.time),e.uint32(32).uint32(t.rpcId),e.uint32(40).uint32(t.error),null!=t.message&&e.uint32(50).string(t.message)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.time=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;case 5:t.error=e.uint32();break;case 6:t.message=e.string();break;default:e.skipType(7&r)}}}};G2C_Ping_Parser=__decorate$p([MessageParserDecorator(OuterMessageCoreOpcode.G2C_Ping)],G2C_Ping_Parser);let C2G_TestPressure_Parser=class{static encode(e,t){}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const t=e.uint32();e.skipType(7&t)}}};C2G_TestPressure_Parser=__decorate$p([MessageParserDecorator(OuterMessageCoreOpcode.C2G_TestPressure)],C2G_TestPressure_Parser);let C2R_Login_Parser=class{static encode(e,t){e.uint32(26).string(t.account),e.uint32(34).string(t.password),e.uint32(40).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.account=e.string();break;case 4:t.password=e.string();break;case 5:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};C2R_Login_Parser=__decorate$p([MessageParserDecorator(OuterMessageCoreOpcode.C2R_Login)],C2R_Login_Parser);let C2G_LoginGate_Parser=class{static encode(e,t){e.uint32(24).int64(t.key),e.uint32(32).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();switch(r>>>3){case 3:t.key=e.int64().toNumber();break;case 4:t.rpcId=e.uint32();break;default:e.skipType(7&r)}}}};C2G_LoginGate_Parser=__decorate$p([MessageParserDecorator(OuterMessageCoreOpcode.C2G_LoginGate)],C2G_LoginGate_Parser);let C2G_Ping_Parser=class{static encode(e,t){e.uint32(24).uint32(t.rpcId)}static decode(e,t,r){let s=void 0===r?e.len:e.pos+r;for(;e.pos<s;){const r=e.uint32();if(r>>>3==3)t.rpcId=e.uint32();else e.skipType(7&r)}}};function MessageHandlerDecorator(e,t,r){return function(s){DecoratorCollector.inst.add(DecoratorTypeCore.MessageHandler,s,e,t,r)}}C2G_Ping_Parser=__decorate$p([MessageParserDecorator(OuterMessageCoreOpcode.C2G_Ping)],C2G_Ping_Parser);class SessionPlayerComponent extends Entity{get playerId(){return this._playerId}init(e){return this._playerId=e,this}}var __decorate$o=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let R2C_Login=class{constructor(e){Object.assign(this,e)}};R2C_Login=__decorate$o([MessageDecorator(OuterMessageCoreOpcode.R2C_Login,"Response")],R2C_Login);let G2C_LoginGate=class{constructor(e){Object.assign(this,e)}};G2C_LoginGate=__decorate$o([MessageDecorator(OuterMessageCoreOpcode.G2C_LoginGate,"Response")],G2C_LoginGate);let G2C_Ping=class{constructor(e){Object.assign(this,e)}};G2C_Ping=__decorate$o([MessageDecorator(OuterMessageCoreOpcode.G2C_Ping,"Response")],G2C_Ping);let C2G_TestPressure=class{constructor(e){Object.assign(this,e)}};C2G_TestPressure=__decorate$o([MessageDecorator(OuterMessageCoreOpcode.C2G_TestPressure,"Message")],C2G_TestPressure);let C2R_Login=class{constructor(e){Object.assign(this,e)}};C2R_Login=__decorate$o([ResponseTypeDecorator(R2C_Login),MessageDecorator(OuterMessageCoreOpcode.C2R_Login,"Request")],C2R_Login);let C2G_LoginGate=class{constructor(e){Object.assign(this,e)}};C2G_LoginGate=__decorate$o([ResponseTypeDecorator(G2C_LoginGate),MessageDecorator(OuterMessageCoreOpcode.C2G_LoginGate,"Request")],C2G_LoginGate);let C2G_Ping=class{constructor(e){Object.assign(this,e)}};C2G_Ping=__decorate$o([ResponseTypeDecorator(G2C_Ping),MessageDecorator(OuterMessageCoreOpcode.C2G_Ping,"Request")],C2G_Ping);class GatePlayerHelper{static getGatePlayerFromSession(e){let t=e.domainScene().getComponent(GatePlayerComponent),r=e.getComponent(SessionPlayerComponent).playerId;return t.getChild(GatePlayer,r)}static getUnitIdFromSession(e){return this.getGatePlayerFromSession(e).getComponent(GatePlayerUnitComponent).unitId}static addRef(e){e.ref++,coreLog("GatePlayerHelper addRef: ref={0}",e.ref)}static subRef(e){e.ref--,coreLog("GatePlayerHelper subRef: ref={0}",e.ref),this.tryRemoveGatePlayer(e)}static async tryRemoveGatePlayer(e){if(e.isDisposed)return;if(e.ref>0)return;if(!await DBHelper.save(e))return await TimerMgr.getInst().waitAsync(1e4),void this.tryRemoveGatePlayer(e);e.isDisposed||e.ref>0||(coreLog(`GatePlayer ${e.account} 被销毁`),e.getParent(GatePlayerComponent).removePlayer(e.account),e.dispose())}}class LoginHelper{static kickSession(e,t){let r=e.getComponent(PlayerSessionComponent),s=r.sessionInstanceId;if(r.sessionInstanceId=t.instanceId,null==s)return;let n=Root.getInst().get(s);null!=n&&(n.isDisposed||(n.Error=SocketCloseCode.OtherLogin,n.dispose()))}}class SessionGatePlayerRefCom extends Entity{init(e){this._gatePlayerId=e.id,GatePlayerHelper.addRef(e)}destroy(){let e=this.domainScene().getComponent(GatePlayerComponent).getChild(GatePlayer,this._gatePlayerId);GatePlayerHelper.subRef(e)}}class SessionLoginLockComponent extends Entity{}var __decorate$n=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let C2G_LoginGateHandler=class extends AMRpcHandler{async run(e,t,r){let s=e.domainScene(),n=s.getComponent(GateSessionKeyComponent).getAccount(t.key);if(null==n)return r.error=ErrorCore.ERR_ConnectGateKeyError,void(r.message="Gate key验证失败!");if(e.removeComponent(SessionAcceptTimeoutComponent),e.getComponent(SessionLoginLockComponent))return r.error=ErrorCore.Login_RepeatRequestGate,void coreWarn(`玩家重复发送登录请求 account= ${n}`);e.addComponent(SessionLoginLockComponent);let o=await CoroutineLock.getInst().wait(LockTypeCore.C2G_LoginGate,n);try{let t=s.getComponent(GatePlayerComponent),o=await t.getPlayer(n);if(null==o)return void(r.error=ErrorCore.ERR_DBErr);if(e.isDisposed)return GatePlayerHelper.addRef(o),void GatePlayerHelper.subRef(o);e.addComponent(SessionGatePlayerRefCom).init(o),LoginHelper.kickSession(o,e),e.addComponent(SessionPlayerComponent).init(o.id),e.addComponent(MailBoxComponent).init(MailboxType.GateSession)}finally{o.dispose()}}};C2G_LoginGateHandler=__decorate$n([MessageHandlerDecorator(C2G_LoginGate,SceneTypeCore.Gate,G2C_LoginGate)],C2G_LoginGateHandler);var __decorate$m=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let C2G_PingHandler=class extends AMRpcHandler{async run(e,t,r){r.time=TimeHelper.serverNow()}};C2G_PingHandler=__decorate$m([MessageHandlerDecorator(C2G_Ping,SceneTypeCore.Gate,G2C_Ping)],C2G_PingHandler);class ActorMessageDispatcherInfo{constructor(e,t,r){this.sceneType=e,this.actorHandler=t,this.responseType=r}}class ActorMessageDispatcherMgr extends Singleton{constructor(){super(...arguments),this.handlers=new Map}awake(){this.load()}destroy(){this.handlers.clear()}registerHandler(e,t){this.handlers.has(e)||this.handlers.set(e,new Array),this.handlers.get(e).push(t)}load(){let e=DecoratorCollector.inst.get(DecoratorType.ActorMessageHandler);for(const t of e){let e=t[0],r=t[1],s=t[2],n=t[3],o=new e,i=new ActorMessageDispatcherInfo(s,o,n);this.registerHandler(r,i)}}async handleAsync(e,t,r){try{let s=this.handlers.get(r.constructor);if(!s)throw new Error(`not found message handler: ${r.constructor}`);let n=e.domainScene().sceneType;for(const o of s)o.sceneType==n&&await o.actorHandler.handleAsync(e,t,r,o.responseType)}catch(e){coreError("ActorMessageDispatcherMgr.handle error, msg= {0}, {1}",r.constructor.name,e.stack)}}handleSync(e,t,r){let s=this.handlers.get(r.constructor);if(!s)throw new Error(`not found message handler: ${r.constructor}`);let n=e.domainScene().sceneType;for(const o of s)o.sceneType==n&&o.actorHandler.handleSync(e,t,r,o.responseType)}}class ActorRequestHandleHelper{static handleActorRequest(e,t){try{let r=ObjectPool.getInst(),s=r.fetch(InstanceIdStruct);s.initArgs1(e);let n=s.Process;s.Process=Options.getInst().process,s.updateResult();let o=s.ToLong();r.recycle(s);let i=Root.getInst().get(o);if(null==i){let e=ActorHelper.createResponse(t,ErrorCore.ERR_NotFoundActor);return void this.reply(n,e)}let a=i.getComponent(MailBoxComponent);if(null==a){coreWarn("actor not found mailbox: {0} {1} {2}",i.constructor.name,o,t.constructor.name);let e=ActorHelper.createResponse(t,ErrorCore.ERR_NotFoundActor);return void this.reply(n,e)}switch(a.MailboxType){case MailboxType.MessageDispatcher:a.addReq(t,n),this.handleReqQueue(a,o);break;case MailboxType.UnOrderMessageDispatcher:ActorMessageDispatcherMgr.getInst().handleAsync(i,n,t);break;case MailboxType.GateSession:default:throw new Error(`no mailboxtype: ${a.MailboxType} ${t.constructor.name}`)}}catch(e){coreError("handleActorRequest error: {0}",e.stack)}}static handleActorLocationMessage(e,t){try{let r=ObjectPool.getInst(),s=r.fetch(InstanceIdStruct);s.initArgs1(e);let n=s.Process;s.Process=Options.getInst().process,s.updateResult();let o=s.ToLong();r.recycle(s);let i=Root.getInst().get(o);if(null==i){let e=ActorHelper.createResponse(t,ErrorCore.ERR_NotFoundActor);return void this.reply(n,e)}let a=i.getComponent(MailBoxComponent);if(null==a){coreWarn("actor not found mailbox: {0} {1} {2}",i.constructor.name,o,t.constructor.name);let e=ActorHelper.createResponse(t,ErrorCore.ERR_NotFoundActor);return void this.reply(n,e)}switch(a.MailboxType){case MailboxType.MessageDispatcher:case MailboxType.UnOrderMessageDispatcher:ActorMessageDispatcherMgr.getInst().handleSync(i,n,t);break;case MailboxType.GateSession:default:throw new Error(`no mailboxtype: ${a.MailboxType} ${t.constructor.name}`)}}catch(e){coreError("handleActorLocationMessage error: {0}",e.stack)}}static reply(e,t){if(e==Options.getInst().process)return null==t.error&&(t.error=ErrorCore.ERR_Success),void ActorMessageSenderMgr.getInst().handleActorResponse(t);try{NetInnerComponent.inst.get(e).Send(t)}catch(e){coreError("ActorRequestHandleHelper.reply error: {0}",e.stack)}}static async handleReqQueue(e,t){try{if(e.isDisposed)return;if(e.isHandling)return;e.isHandling=!0;let r=e.getReq(),s=e.parent;for(;null!=r;){if(s.instanceId!=t){let e=ActorHelper.createResponse(r.req,ErrorCore.ERR_NotFoundActor);this.reply(r.fromProcess,e),r.dispose();break}let n=r.fromProcess,o=r.req;if(r.dispose(),await ActorMessageDispatcherMgr.getInst().handleAsync(s,n,o),e.isDisposed)break;r=e.getReq()}}catch(e){coreError("handleReqQueue error: {0}",e.stack)}finally{e.isHandling=!1,e.clearItem()}}}class AMActorRpcHandler{async handleAsync(e,t,r,s){let n=r.rpcId;this._fromProcess=t;let o=new s;try{await this.run(e,r,o)}catch(e){coreError("{0} run error: {1}",this.constructor.name,e.stack),o.error=ErrorCore.ERR_RpcFail,o.message=e.message}o.rpcId=n,ActorRequestHandleHelper.reply(t,o),this._fromProcess=0}}function ActorMessageHandlerDecorator(e,t,r){return function(s){DecoratorCollector.inst.add(DecoratorType.ActorMessageHandler,s,e,t,r)}}var __decorate$l=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let R2G_GetLoginKeyHandler=class extends AMActorRpcHandler{async run(e,t,r){let s=e.getComponent(GateSessionKeyComponent).newKey(t.account);r.key=s}};R2G_GetLoginKeyHandler=__decorate$l([ActorMessageHandlerDecorator(R2G_GetLoginKey,SceneTypeCore.Gate,G2R_GetLoginKey)],R2G_GetLoginKeyHandler);class AMActorLocationRpcHandler{async handleAsync(e,t,r,s){let n=r,o=n.rpcId,i=new s;try{await this.run(e,n,i)}catch(e){coreError("{0}.run error, {1}",this.constructor.name,e.stack),i.error=ErrorCore.ERR_RpcFail,i.message=e.message}i.rpcId=o,ActorRequestHandleHelper.reply(t,i)}}var __decorate$k=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let UnitGateComponent=class extends Entity{setSessionActorId(e){this.gateSessionActorId=e}};UnitGateComponent=__decorate$k([Transfer],UnitGateComponent);class LocationProxyComponent extends Entity{awake(){LocationProxyComponent.inst=this}destroy(){LocationProxyComponent.inst=null}getLocationSceneId(){return SceneMgr.getInst().getFirstSceneByType("Location").instanceId}async lock(e,t,r=6e4){let s=this.getLocationSceneId();await ActorMsgHelper.call(s,new ObjectLockRequest({key:e,instanceId:t,time:r}))}async get(e){if(0==e)throw new Error("get location key 0");let t=this.getLocationSceneId();return(await ActorMsgHelper.call(t,new ObjectGetRequest({key:e}),ObjectGetResponse)).instanceId}async unLock(e,t,r){let s=this.getLocationSceneId();await ActorMsgHelper.call(s,new ObjectUnLockRequest({key:e,oldInstanceId:t,instanceId:r}))}async add(e,t){let r=this.getLocationSceneId();await ActorMsgHelper.call(r,new ObjectAddRequest({key:e,instanceId:t}))}async remove(e){let t=this.getLocationSceneId();await ActorMsgHelper.call(t,new ObjectRemoveRequest({key:e}))}}class UnitRemoveHelper{static remove(e){LocationProxyComponent.inst.remove(e.id)}}var __decorate$j=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let UnitRefComponent=class extends Entity{constructor(){super(...arguments),this._ref=0}addRef(){this._ref++,coreLog(`unit引用增加, unitId=${this.parent.id}, ref=${this._ref}`)}subRef(){this._ref--,coreLog(`unit引用减少, unitId=${this.parent.id}, ref=${this._ref}`),this.tryDispose()}async tryDispose(){if(this.isDisposed)return;if(await TimerMgr.getInst().waitAsync(3e3),this._ref>0)return;if(null==this.parent)return void coreLog("UnitRefComponent: unit已经销毁, 不再保存");if(this.parent.isDisposed)return void coreLog("UnitRefComponent: unit 已经销毁2, 不再保存");if(!await DBHelper.save(this.parent))return await TimerMgr.getInst().waitAsync(1e4),void this.tryDispose();this._ref>0||(UnitRemoveHelper.remove(this.parent),coreLog(`unit离线, unitId=${this.parent.id}`),this.parent.dispose())}};UnitRefComponent=__decorate$j([Transfer],UnitRefComponent);var __decorate$i=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let G2M_ConnectUnitHandler=class extends AMActorLocationRpcHandler{async run(e,t,r){coreLog(`请求连接在map的unit, unitId=${e.id}}`),e.getComponent(UnitGateComponent).setSessionActorId(t.sessionInstanceId),e.getComponent(UnitRefComponent).addRef(),r.sceneInstanceId=e.domainScene().instanceId}};G2M_ConnectUnitHandler=__decorate$i([ActorMessageHandlerDecorator(G2M_ConnectUnit,SceneTypeCore.Map,M2G_ConnectUnit)],G2M_ConnectUnitHandler);var __decorate$h=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let G2M_DisconnectUnitHandler=class extends AMActorLocationRpcHandler{async run(e,t,r){coreLog(`收到G2M_DisconnectUnit, unitId=${e.id}`);let s=e.getComponent(UnitGateComponent);e.getComponent(UnitRefComponent).subRef(),s.gateSessionActorId==t.sessionInstanceId?s.setSessionActorId(0):coreWarn(`sessionInstanceId不匹配, unitId=${e.id}, sessionInstanceId=${t.sessionInstanceId}, unitGateCom.gateSessionActorId=${s.gateSessionActorId}`)}};G2M_DisconnectUnitHandler=__decorate$h([ActorMessageHandlerDecorator(G2M_DisconnectUnit,SceneTypeCore.Map,M2G_DisconnectUnit)],G2M_DisconnectUnitHandler);var __decorate$g=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let M2M_UnitTransferRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){let s,n=e.getComponent(UnitComponent);s=Date.now();let o,i=ObjectSerializeMgr.getInst();if(ProcessMgr.getInst().processIdIsInMachine(this._fromProcess)){o=i.deserializeSameMachine(t.unit),n.addChild(o);for(let e of t.entitys)o.addComponent(i.deserializeSameMachine(e))}else{o=i.deserialize(t.unit),n.addChild(o);for(let e of t.entitys)o.addComponent(i.deserialize(e))}{let e=Date.now()-s;e>1&&coreWarn(`transfer deserialize cost time=${e}ms, 请考虑优化!`)}o.addComponent(MailBoxComponent),await LocationProxyComponent.inst.unLock(o.id,t.oldInstanceId,o.instanceId),coreLog(`unit传送完成, unitId=${o.id}`),EventSystem.getInst().publish(e,AfterUnitTransfer.create({unit:o}))}};M2M_UnitTransferRequestHandler=__decorate$g([ActorMessageHandlerDecorator(M2M_UnitTransferRequest,SceneTypeCore.Map,M2M_UnitTransferResponse)],M2M_UnitTransferRequestHandler);var __decorate$f=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let DBAccount=class{};DBAccount=__decorate$f([DBWithKey("account",!1,1e3)],DBAccount);class LoginMgr extends Singleton{setAccountInspector(e){this._accountInspector=e}checkAccount(e,t){return null==this._accountInspector?ErrorCore.ERR_Success:this._accountInspector.run(e,t)}setCreateNotExistAccount(e){this._createNotExistAccount=e}getCreateNotExistAccount(){return this._createNotExistAccount}}class RealmGateAddressHelper{static getGate(e){let t=SceneMgr.getInst().getSceneByType(SceneTypeCore.Gate),r=JsHelper.modeString(e,t.length);return coreLog(`${e} 网关=${r}`),t[r]}}var __decorate$e=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let C2R_LoginHandler=class extends AMRpcHandler{async run(e,t,r){let s=await CoroutineLock.getInst().wait(LockTypeCore.CheckAccount,t.account);try{let s=await this.checkAccount(e,t,r);if(s!=ErrorCore.ERR_Success)return void(r.error=s);let n=RealmGateAddressHelper.getGate(t.account),o=await ActorMsgHelper.call(n.instanceId,new R2G_GetLoginKey({account:t.account}),G2R_GetLoginKey);if(o.error!=ErrorCore.ERR_Success)return void(r.error=o.error);r.key=o.key,r.address=n.outerAddress.toString()}finally{s.dispose()}}async checkAccount(e,t,r){let s=LoginMgr.getInst(),n=s.checkAccount(t.account,t.password);if(n!=ErrorCore.ERR_Success)return n;let[o,i]=await DBHelper.query(DBAccount,t.account);if(o!=ErrorCore.ERR_Success)return o;let a=i;if(s.getCreateNotExistAccount()&&null==a){return a=new DBAccount,a.account=t.account,a.password=t.password,await DBHelper.save(a)?ErrorCore.ERR_Success:ErrorCore.ERR_ActorTimeout}return a?a.password!=t.password?ErrorCore.Login_PasswordError:ErrorCore.ERR_Success:ErrorCore.Login_AccountNotExist}};C2R_LoginHandler=__decorate$e([MessageHandlerDecorator(C2R_Login,SceneTypeCore.Realm,R2C_Login)],C2R_LoginHandler);var __decorate$d=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ObjectAddRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){await e.getComponent(LocationComponent).add(t.key,t.instanceId)}};ObjectAddRequestHandler=__decorate$d([ActorMessageHandlerDecorator(ObjectAddRequest,SceneTypeCore.Location,ObjectAddResponse)],ObjectAddRequestHandler);var __decorate$c=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ObjectGetRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){let s=await e.getComponent(LocationComponent).get(t.key);null==s&&(s=0),r.instanceId=s}};ObjectGetRequestHandler=__decorate$c([ActorMessageHandlerDecorator(ObjectGetRequest,SceneTypeCore.Location,ObjectGetResponse)],ObjectGetRequestHandler);var __decorate$b=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ObjectLockRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){await e.getComponent(LocationComponent).lock(t.key,t.instanceId,t.time)}};ObjectLockRequestHandler=__decorate$b([ActorMessageHandlerDecorator(ObjectLockRequest,SceneTypeCore.Location,ObjectLockResponse)],ObjectLockRequestHandler);var __decorate$a=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ObjectRemoveRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){await e.getComponent(LocationComponent).remove(t.key)}};ObjectRemoveRequestHandler=__decorate$a([ActorMessageHandlerDecorator(ObjectRemoveRequest,SceneTypeCore.Location,ObjectRemoveResponse)],ObjectRemoveRequestHandler);var __decorate$9=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ObjectUnLockRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){e.getComponent(LocationComponent).unLock(t.key,t.oldInstanceId,t.instanceId)}};ObjectUnLockRequestHandler=__decorate$9([ActorMessageHandlerDecorator(ObjectUnLockRequest,SceneTypeCore.Location,ObjectUnLockResponse)],ObjectUnLockRequestHandler);var __decorate$8=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let DBCacheRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){let s=e.getComponent(DBCacheComponentMgr),n=ProcessMgr.getInst().processIdIsInMachine(this._fromProcess)?ObjectSerializeMgr.getInst().deserializeSameMachine(t.data):ObjectSerializeMgr.getInst().deserialize(t.data);if(!n.constructor)return coreError("obj.constructor is null"),void(r.error=ErrorCore.ERR_Exception);let o=s.getCacheCom(n.constructor);null!=o?o.save(n):r.error=ErrorCore.ERR_Exception}};DBCacheRequestHandler=__decorate$8([ActorMessageHandlerDecorator(DBCacheRequest,SceneTypeCore.DBCache,DBCacheResponse)],DBCacheRequestHandler);var __decorate$7=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let DBDeleteRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){let s=e.getComponent(DBCacheComponentMgr),n=ObjectSerializeMgr.getInst().getType(t.typeCode),o=s.getCacheCom(n);await o.delete(t.numberKey||t.stringKey)}};DBDeleteRequestHandler=__decorate$7([ActorMessageHandlerDecorator(DBDeleteRequest,SceneTypeCore.DBCache,DBDeleteResponse)],DBDeleteRequestHandler);var __decorate$6=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let DBQueryRequestHandler=class extends AMActorRpcHandler{async run(e,t,r){let s=e.getComponent(DBCacheComponentMgr),n=ObjectSerializeMgr.getInst(),o=n.getType(t.typeCode),i=s.getCacheCom(o),a=await i.query(t.numberKey||t.stringKey);if(null!=a){let e=ProcessMgr.getInst().processIdIsInMachine(this._fromProcess);r.data=e?n.serializeSameMachine(a):n.serialize(a)}else coreLog(`db 没查询到类型typecode=${t.typeCode}`)}};DBQueryRequestHandler=__decorate$6([ActorMessageHandlerDecorator(DBQueryRequest,SceneTypeCore.DBCache,DBQueryResponse)],DBQueryRequestHandler);class ActorMessageHandleHelper{static handleActorMessage(e,t){let r=ObjectPool.getInst(),s=r.fetch(InstanceIdStruct);s.initArgs1(e);let n=s.Process;s.Process=Options.getInst().process,s.updateResult();let o=s.ToLong();r.recycle(s);let i=Root.getInst().get(o);if(null==i)return;let a=i.getComponent(MailBoxComponent);if(null!=a)switch(a.MailboxType){case MailboxType.MessageDispatcher:case MailboxType.UnOrderMessageDispatcher:ActorMessageDispatcherMgr.getInst().handleSync(i,n,t);break;case MailboxType.GateSession:i instanceof Session&&i.Send(t);break;default:throw new Error(`no mailboxtype: ${a.MailboxType} ${t.constructor.name}`)}else coreError("actor not found mailbox, entityType: {0}, msg= {1}",i.constructor.name,t.constructor.name)}}var __decorate$5=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ActorMessageHandler=class{run(e,t){ActorMessageHandleHelper.handleActorMessage(e,t)}};ActorMessageHandler=__decorate$5([InnerMsgDecorator(MessageTypeCore.ActorMessage)],ActorMessageHandler);var __decorate$4=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ActorRequestHandler=class{run(e,t){ActorRequestHandleHelper.handleActorRequest(e,t)}};ActorRequestHandler=__decorate$4([InnerMsgDecorator(MessageTypeCore.ActorRequest),InnerMsgDecorator(MessageTypeCore.ActorLocationRequest)],ActorRequestHandler);let ActorLocationMessageHandler$1=class{run(e,t){ActorRequestHandleHelper.handleActorLocationMessage(e,t)}};ActorLocationMessageHandler$1=__decorate$4([InnerMsgDecorator(MessageTypeCore.ActorLocationMessage)],ActorLocationMessageHandler$1);class ActorResponseHandleHelper{static handleActorResponse(e){null==e.error&&(e.error=ErrorCore.ERR_Success),ActorMessageSenderMgr.getInst().handleActorResponse(e)}}var __decorate$3=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ActorResponseHandler=class{run(e,t){ActorResponseHandleHelper.handleActorResponse(t)}};ActorResponseHandler=__decorate$3([InnerMsgDecorator(MessageTypeCore.ActorResponse),InnerMsgDecorator(MessageTypeCore.ActorLocationResponse)],ActorResponseHandler);class ActorLocationSender extends Entity{constructor(){super(...arguments),this.ActorId=0,this.LastSendOrRecvTime=0,this.Error=0,this._reqQueue=[],this.isSending=!1}awake(){this.LastSendOrRecvTime=TimeHelper.serverNow(),this.ActorId=0,this.Error=0}destroy(){this.LastSendOrRecvTime=0,this.ActorId=0,this.Error=0}addReq(e){this._reqQueue.push(e)}getReq(){return this._reqQueue.shift()}}class ActorLocationSenderComponent extends Entity{constructor(){super(...arguments),this.TIMEOUT_TIME=6e4}awake(){ActorLocationSenderComponent.inst=this,this.CheckTimer=TimerMgr.getInst().newRepeatedTimer(1e4,this.check.bind(this))}destroy(){ActorLocationSenderComponent.inst=null,TimerMgr.getInst().remove(this.CheckTimer)}check(){let e=[],t=TimeHelper.serverNow();for(let[r,s]of this.children){t>s.LastSendOrRecvTime+this.TIMEOUT_TIME&&e.push(r)}for(let t of e)this.remove(t)}getOrCreate(e){let t=this.children.get(e);return t||(t=this.addChildWithId(ActorLocationSender,e),t)}remove(e){let t=this.children.get(e);t&&t.dispose()}send(e,t){if(0==e)return void coreError("ActorLocationSenderComponent.send, entityId is 0");let r=this.getOrCreate(e),s=ActorMessageSenderMgr.getInst().getRpcId();t.rpcId=s,r.addReq(t),this.innerSend(e)}async innerSend(e){let t=this.getOrCreate(e);if(!t.isSending)try{let r=t.instanceId;t.isSending=!0;let s=t.getReq();for(;s;){if(t.instanceId!=r)return void coreLog("ActorLocationSenderComponent.innerSend timeout, entityId={0}",e);if(t.Error==ErrorCore.ERR_NotFoundActor)return void coreLog("ActorLocationSenderComponent.sendCall ERR_NotFoundActor, entityId={0}, msg={1}",e,s.constructor.name);await this.callInner(t,s.rpcId,s),s=t.getReq()}}catch(t){coreError("ActorLocationSenderComponent.innerSend error, entityId={0}, {2}",e,t.stack)}finally{t.isSending=!1}}async call(e,t){if(0==e)return coreError("ActorLocationSenderComponent.call, entityId is 0"),ActorHelper.createResponse(t,ErrorCore.ERR_ActorIdIsZero);let r=this.getOrCreate(e),s=ActorMessageSenderMgr.getInst().getRpcId();t.rpcId=s;let n=r.instanceId,o=await CoroutineLock.getInst().wait(LockTypeCore.ActorLocationSender,e.toString());try{if(r.instanceId!=n)return ActorHelper.createResponse(t,ErrorCore.ERR_ActorLocationSenderDispose);if(r.Error==ErrorCore.ERR_NotFoundActor)return coreLog("ActorLocationSenderComponent.call ERR_NotFoundActor"),ActorHelper.createResponse(t,r.Error);return await this.callInner(r,s,t)}catch(r){return coreError("ActorLocationSenderComponent.call error, entityId={0}, msg={1}, {2}",e,t.constructor.name,r.stack),ActorHelper.createResponse(t,ErrorCore.ERR_ActorLocationError)}finally{o.dispose()}}async callInner(e,t,r){let s=0,n=e.instanceId;for(e.LastSendOrRecvTime=TimeHelper.serverNow();;){if(0==e.ActorId&&(e.ActorId=await LocationProxyComponent.inst.get(e.id),e.instanceId!=n))return ActorHelper.createResponse(r,ErrorCore.ERR_ActorLocationSenderDispose);if(0==e.ActorId)return e.Error=ErrorCore.ERR_NotFoundActor,ActorHelper.createResponse(r,ErrorCore.ERR_NotFoundActor);let o=await ActorMessageSenderMgr.getInst().callWithRpcId(e.ActorId,t,r);if(e.instanceId!=n)return ActorHelper.createResponse(r,ErrorCore.ERR_ActorLocationSenderDispose);if(o.error!==ErrorCore.ERR_NotFoundActor)return o;if(++s,s>5)return coreLog(`actor send message fail, actorid: ${e.id}`),e.Error=ErrorCore.ERR_NotFoundActor,o;if(await TimerMgr.getInst().waitAsync(500),e.instanceId!=n)return ActorHelper.createResponse(r,ErrorCore.ERR_ActorLocationSenderDispose);e.ActorId=0}}}var __decorate$2=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ActorLocationMessageHandler=class{run(e,t){let r=t,s=GatePlayerHelper.getUnitIdFromSession(e);0!=s?ActorLocationSenderComponent.inst.send(s,r):coreWarn("unitId is 0, not send to unit")}};ActorLocationMessageHandler=__decorate$2([OuterMsgDecorator(MessageTypeCore.ActorLocationMessage)],ActorLocationMessageHandler);var __decorate$1=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let ActorLocationReqMsgHandler=class{async run(e,t){let r=t,s=GatePlayerHelper.getUnitIdFromSession(e);if(0==s)return void coreWarn("unitId is 0, not send to unit, msg={0}",t.constructor.name);let n=r.rpcId,o=e.instanceId,i=await ActorLocationSenderComponent.inst.call(s,r);i.rpcId=n,e.instanceId==o&&e.Send(i)}};ActorLocationReqMsgHandler=__decorate$1([OuterMsgDecorator(MessageTypeCore.ActorLocationRequest)],ActorLocationReqMsgHandler);var __decorate=function(e,t,r,s){var n,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};let GeneralMsgHandler=class{run(e,t){MessageDispatcherMgr.getInst().handle(e,t)}};GeneralMsgHandler=__decorate([OuterMsgDecorator(MessageTypeCore.Message),OuterMsgDecorator(MessageTypeCore.Request)],GeneralMsgHandler);const LOG="info",WARN="warn",ERROR="error",customFormat=format.combine(format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),format.align(),format.printf((e=>`${e.level}: ${[e.timestamp]}: ${e.message}`))),defaultOptions={format:customFormat,datePattern:"YYYY-MM-DD",zippedArchive:!0,maxSize:"20m",maxFiles:"30d"},logger=createLogger({format:customFormat,transports:[new DailyRotateFile({filename:"logs/info-%DATE%.log",level:LOG,...defaultOptions}),new DailyRotateFile({filename:"logs/error-%DATE%.log",level:ERROR,...defaultOptions})]});class WinstonLogger{log(e){Options.getInst().develop&&console.log(e),logger.log(LOG,e)}warn(e){Options.getInst().develop&&console.warn(e),logger.log(WARN,e)}error(e){Options.getInst().develop&&console.error(e),logger.log(ERROR,e)}}class LoggerLoader{static run(){Game.addSingleton(Logger).iLog=new WinstonLogger,process.on("uncaughtException",(function(e){coreError("[moye.uncaughtException][processid: {2}], message= {1}, stack= {0}",e.stack,e.message,Options.getInst().process)})),process.on("unhandledRejection",(function(e,t){e instanceof Error?coreError("[moye.unhandledRejection], message= {1}, stack= {0}",e.stack,e.message):coreError("[moye.unhandledRejection]",e)}))}}class OptionsLoader{static run(){Game.addSingleton(Options);let e=Options.getInst(),t=mri(process.argv.slice(2));for(const r in t){let s=t[r];if(null!=s)switch(typeof s){case"string":if("true"==s||"false"==s){e._setArgs(r,"true"==s);break}default:e._setArgs(r,s)}else console.error(`参数${r}没有值`)}null!=e.getArgs("appType")&&(e.appType=AppType[e.getArgs("appType")]),null!=e.getArgs("logLevel")&&(e.logLevel=e.getArgs("logLevel")),null!=e.getArgs("develop")&&(e.develop=e.getArgs("develop")),null!=e.getArgs("process")&&(e.process=e.getArgs("process")),e.isServer=!0}}class ProcessStartMgr extends Singleton{run(){let e=ProcessMgr.getInst().getThisMachineProcessInfos(),t=new Map,r=mri(process.argv.slice(2));for(const e in r){let s=r[e];t.set(e,s)}for(let r of e){t.set("appType","Server"),t.set("process",r.id);let e=new Map(t);this.startProcess(e)}}startProcess(e){let t=process.argv[1],r=`process${e.get("process")}`,s=`node --es-module-specifier-resolution=node --no-warnings ${t}`,n=[];for(let[t,r]of e)s+=` --${t}=${r}`,n.push(`--${t}=${r}`);coreLog("启动子进程参数: {0}",s);let o=fork(t,n);o.disconnect(),o.on("error",(t=>(coreLog("子进程{0}错误: {1}: {2}",r,t.message,t.stack),coreLog("重启子进程{0}",r),this.startProcess(e)))),o.on("exit",((t,s)=>(coreLog("子进程{0}退出: code= {1}, signal= {2}",r,t,s),coreLog("重启子进程{0}",r),this.startProcess(e)))),o.on("close",((t,s)=>(coreLog("子进程{0}关闭: code= {1}, signal= {2}",r,t,s),coreLog("重启子进程{0}",r),this.startProcess(e))))}}class InitHelper{static checkInitStatus(){return MachineMgr.getInst().isInit()?ProcessMgr.getInst().isInit()?!!this._checkScenes():(coreError("ProcessMgr没有初始化"),!1):(coreError("MachineMgr没有初始化"),!1)}static _checkScenes(){if(!SceneMgr.getInst().isInit())return coreError("SceneMgr没有初始化"),!1;let e=SceneMgr.getInst().getSceneCfgs(),t=new Set;for(let r=0;r<e.length;r++){let s=e[r];this._needSceneTypes.has(s.sceneType)&&t.add(s.sceneType)}return t.size==this._needSceneTypes.size||(coreError("SceneMgr初始化缺少必要的Scene"),!1)}}InitHelper._needSceneTypes=new Set([SceneTypeCore.Realm,SceneTypeCore.Gate,SceneTypeCore.DBCache,SceneTypeCore.Location]);class SceneManagerComponent extends Entity{awake(){SceneManagerComponent.inst=this}destroy(){SceneManagerComponent.inst=null}}class SceneCreator{static run(){let e=SceneMgr.getInst().curProcessScenes();for(let t=0;t<e.length;t++){let r=e[t];SceneFactory.createByInfo(SceneManagerComponent.inst,r)}}}class Program{static init(){coreLog("try program-init"),OptionsLoader.run(),LoggerLoader.run(),Game.addSingleton(MachineMgr),Game.addSingleton(ProcessMgr),Game.addSingleton(SceneMgr),coreLog("program-init done")}static async start(){if(InitHelper.checkInitStatus()){if(Game.addSingleton(ObjectPool),MachineMgr.getInst().start(),ProcessMgr.getInst().start(),SceneMgr.getInst().start(),Options.getInst().appType==AppType.Watcher)return coreLog("Watcher 启动"),void Game.addSingleton(ProcessStartMgr).run();coreLog("try program-start"),this.addSingleton(),this.addRootSceneCom(),this.startTimer(),await EventSystem.getInst().publishAsync(Root.getInst().scene,new EntryEvent),SceneCreator.run(),MsgPrinter.getInst().ignore(OuterMessageCoreOpcode.C2G_Ping),MsgPrinter.getInst().ignore(OuterMessageCoreOpcode.G2C_Ping),coreLog("program-start done")}else coreError("初始化失败")}static startTimer(){setInterval((()=>{try{this.update(),this.lateUpdate()}catch(e){coreError(e)}}),1)}static update(){Game.update()}static lateUpdate(){Game.lateUpdate(),Game.frameFinishUpdate()}static addSingleton(){Game.addSingleton(InvokeMgr),Game.addSingleton(EventSystem),Game.addSingleton(TimeInfo),Game.addSingleton(IdGenerator),Game.addSingleton(CoroutineLock),Game.addSingleton(TimerMgr),Game.addSingleton(MessageTypeMgr),Game.addSingleton(NetServices),Game.addSingleton(FlagMgr),Game.addSingleton(Root),Game.addSingleton(DBSerializeMgr),Game.addSingleton(ActorMessageSenderMgr),Game.addSingleton(LoginMgr),Game.addSingleton(FrameFinishActionMgr),Game.addSingleton(MessageParserMgr),Game.addSingleton(MsgPrinter),Game.addSingleton(OuterMessageMsgDispatcher),Game.addSingleton(InnerMessageDispatcher),Game.addSingleton(MessageDispatcherMgr),Game.addSingleton(ActorMessageDispatcherMgr),Game.addSingleton(ResponseTypeMgr),Game.addSingleton(ObjectSerializeMgr),Game.addSingleton(TaskQueueMgr)}static addRootSceneCom(){let e=Root.getInst().scene;e.addComponent(ActorLocationSenderComponent),e.addComponent(NetInnerComponent),e.addComponent(LocationProxyComponent)}}class ActorLocationMsgHelper{static async call(e,t,r){return await ActorLocationSenderComponent.inst.call(e,t)}static send(e,t){ActorLocationSenderComponent.inst.send(e,t)}}class UnitDisconnectHelper{static async disconnect(e,t,r){await this.sendDisconnectMsg(e,t),EventSystem.getInst().publish(r,AfterDisconnectUnit.create({unitId:e}))}static async sendDisconnectMsg(e,t){coreLog(`[断开unit连接][G2M_DisconnectUnit start],unitid=${e}`);let r=await ActorLocationMsgHelper.call(e,new G2M_DisconnectUnit({sessionInstanceId:t}),M2G_DisconnectUnit);return coreLog(`[断开unit连接][G2M_DisconnectUnit end],unitid=${e}, error=${r.error}`),r}}class SessionDisconnectUnitCom extends Entity{init(e,t){this._sessionInstanceId=e,this._unitId=t}destroy(){UnitDisconnectHelper.disconnect(this._unitId,this._sessionInstanceId,this.domainScene())}}class UnitConnectHelper{static async connect(e,t){let r=await CoroutineLock.getInst().wait(LockTypeCore.UnitConnect,t.toString());try{coreLog(`[连接unit][getUnitInstanceId start] unitId=${t}`);let r,s=await this.getUnitInstanceId(t);if(coreLog(`[连接unit][getUnitInstanceId end] unitId=${t} unitInstanceId=${s}`),0==s){let[s,n]=await this.loadFromDB(e,t);if(s!=ErrorCore.ERR_Success)return[s,null];if(r=n,e.isDisposed)return r.addComponent(UnitRefComponent).subRef(),[ErrorCore.ERR_SessionDisposed,null]}else{let r=e.instanceId;coreLog(`[连接unit][发送G2M_ConnectUnit start] unitId=${t}`);let s=await ActorLocationMsgHelper.call(t,new G2M_ConnectUnit({sessionInstanceId:r}),M2G_ConnectUnit);if(s.error!=ErrorCore.ERR_Success)return[s.error,null];if(coreLog(`[连接unit][发送G2M_ConnectUnit end] unitId=${t}, error=${s.error}`),e.isDisposed)return await UnitDisconnectHelper.sendDisconnectMsg(t,r),[ErrorCore.ERR_SessionDisposed,null]}return e.addComponent(SessionDisconnectUnitCom).init(e.instanceId,t),GatePlayerHelper.getGatePlayerFromSession(e).getComponent(GatePlayerUnitComponent).unitId=t,EventSystem.getInst().publish(e.domainScene(),AfterConnectUnit.create({unitId:t,session:e})),[ErrorCore.ERR_Success,r]}finally{r.dispose()}}static async loadFromDB(e,t){let[r,s]=await DBHelper.query(Unit,t);if(r!=ErrorCore.ERR_Success)return[r,null];let n=s;return e.isDisposed?[ErrorCore.ERR_SessionDisposed,null]:(e.domainScene().getComponent(GateMapComponent).addUnit(n),await LocationProxyComponent.inst.add(n.id,n.instanceId),ActorLocationSenderComponent.inst.remove(n.id),e.isDisposed?(await LocationProxyComponent.inst.remove(n.id),n.dispose(),[ErrorCore.ERR_SessionDisposed,null]):(n.addComponent(UnitGateComponent).setSessionActorId(e.instanceId),n.addComponent(MailBoxComponent),n.addComponent(UnitRefComponent).addRef(),[ErrorCore.ERR_Success,n]))}static async getUnitInstanceId(e){return await LocationProxyComponent.inst.get(e)}}class GateMapHelper{static getGateMapInstanceId(e){return e.domainScene().getComponent(GateMapComponent).mapScene.instanceId}}class TransferHelper{static async transfer(e,t){if(e.isDisposed)return;let r=await CoroutineLock.getInst().wait(LockTypeCore.Transfer,e.id.toString());try{if(e.isDisposed)return;let r;r=Date.now();let s=e.id,n=e.instanceId,o=new M2M_UnitTransferRequest;o.oldInstanceId=n;let i=ProcessMgr.getInst().actorIdIsInMachine(t),a=ObjectSerializeMgr.getInst();o.unit=i?a.serializeSameMachine(e):a.serialize(e);let c=FlagMgr.getInst();if(i){for(let[t,r]of e.components)if(c.hasFlag(DecoratorTypeCore.Transfer,r.getType())){let e=a.serializeSameMachine(r);o.entitys.push(e)}}else for(let[t,r]of e.components)if(c.hasFlag(DecoratorTypeCore.Transfer,r.getType())){let e=a.serialize(r);o.entitys.push(e)}{let e=Date.now()-r;e>1&&coreWarn(`transfer serialize cost time=${e}ms, 请考虑优化!`)}e.dispose(),coreLog(`unit开始传送, unitId=${s}`),await LocationProxyComponent.inst.lock(s,n),await ActorMsgHelper.call(t,o)}finally{r.dispose()}}}class AMActorLocationHandler{handleSync(e,t,r,s){let n=new _ActorResponse({rpcId:r.rpcId});ActorRequestHandleHelper.reply(t,n);{let t=this.run(e,r);t instanceof Promise&&(coreWarn("{0}.run 请不要使用异步, 因为异步没办法保证消息接收后的处理顺序, 如果需要可以另开一个协程处理",this.constructor.name),safeCall(t))}}}class UnitMsgHelper{static sendToClient(e,t){let r=e.getComponent(UnitGateComponent).gateSessionActorId;0!=r&&ActorMsgHelper.send(r,t)}static broadcast(e,t){let r=e.getComponent(UnitComponent);for(const[e,s]of r.children)this.sendToClient(s,t)}static broadcastExcept(e,t,r){let s=e.getComponent(UnitComponent);for(const[e,n]of s.children)n.id!=r&&this.sendToClient(n,t)}}class AMActorHandler{handleSync(e,t,r,s){{let t=this.run(e,r);t instanceof Promise&&(coreWarn("{0}.run 请不要使用异步, 因为异步没办法保证消息接收后的处理顺序, 如果需要可以另开一个协程处理",this.constructor.name),safeCall(t))}}}export{AEvent,AEventHandler,AInvoke,AInvokeHandler,AMActorHandler,AMActorLocationHandler,AMActorLocationRpcHandler,AMActorRpcHandler,AMHandler,AMRpcHandler,AWait,ActorLocationMsgHelper,ActorMessageHandlerDecorator,ActorMsgHelper,AfterConnectUnit,AfterCreateGatePlayer,AfterCreateUnit,AfterDisconnectUnit,AfterUnitTransfer,C2G_LoginGate,C2G_Ping,C2G_TestPressure,C2R_Login,CancellationToken,CoroutineLock,CoroutineLockItem,DB,DBHelper,DBWithKey,DecoratorCollector,DoubleMap,Entity,EntitySceneFactory,EntryEvent,EventComponent,EventHandlerDecorator,FrameFinishActionMgr,G2C_LoginGate,G2C_Ping,Game,GateMapHelper,GatePlayer,GatePlayerHelper,IPEndPoint,IdGenerator,IgnoreSerialize,Injector,InjectorDecorator,InnerMsgDecorator,InstanceIdHelper,InvokeDecorator,InvokeMgr,JsHelper,Logger,LoginMgr,MachineMgr,MessageDecorator,MessageDispatcherInfo,MessageDispatcherMgr,MessageHandlerDecorator,MessageParserDecorator,MessageParserMgr,MessageTypeCore,MessageTypeMgr,MsgPrinter,MultiMap,NetErrorEvent,NumericChange,NumericComponent,NumericWatcherHandlerDecorator,ObjectPool,ObjectSerializeMgr,ObjectWait,Options,OuterMsgDecorator,ProcessMgr,Program,R2C_Login,RandomGenerator,RecycleObj,ResponseTypeDecorator,Root,RpcInfo,Scene,SceneCreateEvent,SceneFactory,SceneMgr,SceneTypeCore,Session,Singleton,Task,TaskQueueMgr,TimeHelper,TimeInfo,TimerMgr,Transfer,TransferHelper,Unit,UnitComponent,UnitConnectHelper,UnitGateComponent,UnitMsgHelper,WaitError,error,log,warn};